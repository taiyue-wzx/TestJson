<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="AndroidTest">

	<insert id="insertANDROID_ISSUE_INFO" parameterClass="java.util.HashMap">
		<selectKey keyProperty="ISSUE_ID" resultClass="int" >
			SELECT SQE_TB_ISSUE_ISSUE_ID.NEXTVAL AS ISSUE_ID FROM DUAL
		</selectKey>
		INSERT INTO
		TB_ISSUE 
		(
		ISSUE_ID,ACCOUNT_TYPE,PHONE_NUMBER,COMPANY,CITY,CONTACT,CONTACT_PHONE_NUM,ISSUE_APPEAR_DATE,ISSUE_APPEAR_LOCATION,
		ISSUE_APPEAR_ADDRESS,NET_TYPE,ISSUE_TYPE,ISSUE_DESCRIBE,TEST_START_TIME,TEST_END_TIME,TIMESTAMP,
		GROUPID,SUBGROUPID,SUBGROUPNAME,TEST_START_TIME_IOS,VIP_TYPE,TEST_PROECT
		)
		VALUES
		(
		#ISSUE_ID#,#ACCOUNT_TYPE:VARCHAR#,#PHONE_NUMBER:VARCHAR#,#COMPANY:VARCHAR#,#CITY:VARCHAR#,#CONTACT:VARCHAR#,
		#CONTACT_PHONE_NUM:VARCHAR#,#ISSUE_APPEAR_DATE:VARCHAR#,#ISSUE_APPEAR_LOCATION:VARCHAR#,#ISSUE_APPEAR_ADDRESS:VARCHAR#,
		#NET_TYPE:VARCHAR#,#ISSUE_TYPE:VARCHAR#,#ISSUE_DESCRIBE:VARCHAR#,#TEST_START_TIME:TIMESTAMP#,#TEST_END_TIME:TIMESTAMP#,#TIMESTAMP:TIMESTAMP#,
		#GROUPID:VARCHAR#,#SUBGROUPID:VARCHAR#,#SUBGROUPNAME:VARCHAR#,#TEST_START_TIME_IOS:VARCHAR#,#VIP_TYPE:INTEGER#,#TEST_PROECT:VARCHAR#
		)
	</insert>
	
	<select id="selectANDROID_ISSUE_INFO" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT T.*,to_char(T.TEST_START_TIME,'YYYY-MM-DD HH24:MI:SS:FF') TEST_START_TIME1,to_char(T.TEST_END_TIME,'YYYY-MM-DD HH24:MI:SS:FF') TEST_END_TIME1 
		FROM TB_ISSUE T WHERE 1=1
		<isNotEmpty property="PHONE_NUMBER" prepend=" and ">  
        	T.PHONE_NUMBER = #PHONE_NUMBER:VARCHAR#
        </isNotEmpty>
        <isNotEmpty property="ISSUE_APPEAR_DATE" prepend=" and ">  
        	substr(T.ISSUE_APPEAR_DATE,0,7) = #ISSUE_APPEAR_DATE:VARCHAR#
        </isNotEmpty>
        <isNotEmpty property="ISSUE_ID" prepend=" and ">  
        	T.ISSUE_ID = #ISSUE_ID:INTEGER#
        </isNotEmpty>
        <isNotEmpty property="VIP_TYPE" prepend=" and ">  
        	T.VIP_TYPE = #VIP_TYPE:INTEGER#
        </isNotEmpty>
	</select>

	<insert id="insertANDROID_ZEALOT_LOG" parameterClass="java.util.HashMap">
		INSERT INTO
		ANDROID_ZEALOT_LOG
		( MCC,MNC,LAC,CI,LON,LAT,RXLEVEL,IMEI,TIME)
		VALUES
		(#MCC:VARCHAR#,#MNC:VARCHAR#,#LAC:VARCHAR#,#CI:VARCHAR#,#LON:FLOAT#,#LAT:FLOAT#,#RXLEVEL:VARCHAR#,#IMEI:VARCHAR#,#TIME:VARCHAR#)
	</insert>

	<insert id="insertANDROID_REPORT_LOG" parameterClass="java.util.HashMap">
		INSERT INTO
		ANDROID_REPORT_LOG
		(
		MCC,MNC,LTE_MNC,LAC,CI,NETTYPE,RXLEVEL,TAC,SCELL_ID,CRS_RSRP,SCELL_PCI,RSRQ,GROUP_NAME,SUBGROUP_NAME,LON,LAT,TIME,IMEI,MANUFACTURE,MSISDN,TYPECODE,OS)
		VALUES
		(#MCC:VARCHAR#,#MNC:VARCHAR#,#LTE_MNC:VARCHAR#,#LAC:VARCHAR#,#CI:VARCHAR#,#NETTYPE:VARCHAR#,#RXLEVEL:VARCHAR#,
		#TAC:VARCHAR#,#SCELL_ID:VARCHAR#,#CRS_RSRP:VARCHAR#,#SCELL_PCI:VARCHAR#,#RSRQ:VARCHAR#,#GROUP_NAME:VARCHAR#,
		#SUBGROUP_NAME:VARCHAR#,#LON:FLOAT#,#LAT:FLOAT#,#TIME:VARCHAR#,#IMEI:VARCHAR#,#MANUFACTURE:VARCHAR#,#MSISDN:VARCHAR#,#TYPECODE:VARCHAR#,#OS:VARCHAR#)
	</insert>

	<select id="getRegistrationPerson" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT *
		FROM TB_REGISTRATION_PERSON T WHERE T.MSISDN=#MSISDN:VARCHAR#
	</select>
	<insert id="insertANDROID_REGISTRATION_PERSON" parameterClass="java.util.HashMap">
		INSERT INTO
		TB_REGISTRATION_PERSON
		(PERSON_TYPE_ID,MSISDN,REG_DATE,SUBGROUP_ID,SUBGROUP_NAME,STAFF_CODE)
		VALUES
		(#PERSON_TYPE_ID:INTEGER#,#MSISDN:VARCHAR#,#REG_DATE:TIMESTAMP#,#SUBGROUP_ID:INTEGER#,#SUBGROUP_NAME:VARCHAR#,#STAFF_CODE:VARCHAR#)
	</insert>
	<insert id="insertANDROID_REGISTRATION_PERSON_JX" parameterClass="java.util.HashMap">
		INSERT INTO
		TB_REGISTRATION_PERSON
		(MSISDN,REG_DATE,REALNAME)
		VALUES
		(#MSISDN:VARCHAR#,#REG_DATE:TIMESTAMP#,#REALNAME:VARCHAR#)
	</insert>
	<update id="updateANDROID_REGISTRATION_PERSON" parameterClass="java.util.HashMap">
		UPDATE
		TB_REGISTRATION_PERSON T 
		SET T.PERSON_TYPE_ID = #PERSON_TYPE_ID:INTEGER#
		WHERE 
		T.MSISDN=#MSISDN:VARCHAR#
	</update>
	<select id="getDetailedGroupGcSelect" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select * from TB_GC_GROUP order by GROUP_ID
	</select>
	
	<select id="getDetailedGroupSelect" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT * FROM TB_GROUP where EFFECTIVE_MARK = 1 order by GROUP_ID
	</select>
	<select id="selectANDROID_GROUP" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT * FROM TB_GROUP T WHERE T.GROUP_ID=#GROUP_ID:VARCHAR# and T.EFFECTIVE_MARK = 1 order by GROUP_ID
	</select>
	<insert id="insertANDROID_GROUP" parameterClass="java.util.HashMap">
		INSERT INTO 
		TB_GROUP 
		(SUBGROUP_ID,SUBGROUP_NAME,COUNTY_TOWN_NAME,GROUP_NAME,COUNTY_TOWN_TYPE,GROUP_ID,SCENE_TYPE,SCENE_TYPE_ID,GPS_TYPE,APP_LON,APP_LAT,RADIUS,CUSTOMER_MANAGER_NAME,CUSTOMER_MANAGER_PHONE,CONTACT_NAME,CONTACT_PHONENUM,GROUP_PERSON_NUMBER,EFFECTIVE_MARK,COMPANY_ADDRESS)
		VALUES 
		(#SUBGROUP_ID:INTEGER#,#SUBGROUP_NAME:VARCHAR#,#COUNTY_TOWN_NAME:VARCHAR#,#GROUP_NAME:VARCHAR#,#COUNTY_TOWN_TYPE:VARCHAR#,#GROUP_ID:VARCHAR#,#SCENE_TYPE:VARCHAR#,#SCENE_TYPE_ID:INTEGER#,#GPS_TYPE:VARCHAR#,#APP_LON:FLOAT#,#APP_LAT:FLOAT#,
		#RADIUS:INTEGER#,#CUSTOMER_MANAGER_NAME:VARCHAR#,#CUSTOMER_MANAGER_PHONE:INTEGER#,#CONTACT_NAME:VARCHAR#,#CONTACT_PHONENUM:INTEGER#,#GROUP_PERSON_NUMBER:INTEGER#,#EFFECTIVE_MARK:INTEGER#,#COMPANY_ADDRESS:VARCHAR#)
	</insert>
	<update id="updateANDROID_GROUP" parameterClass="java.util.HashMap">
		UPDATE
		TB_GROUP T 
		SET SUBGROUP_ID=#SUBGROUP_ID:INTEGER#,SUBGROUP_NAME=#SUBGROUP_NAME:VARCHAR#,COUNTY_TOWN_NAME=#COUNTY_TOWN_NAME:VARCHAR#,GROUP_NAME=#GROUP_NAME:VARCHAR#,COUNTY_TOWN_TYPE=#COUNTY_TOWN_TYPE:VARCHAR#,
		GROUP_ID=#GROUP_ID:VARCHAR#,SCENE_TYPE=#SCENE_TYPE:VARCHAR#,SCENE_TYPE_ID=#SCENE_TYPE_ID:INTEGER#,GPS_TYPE=#GPS_TYPE:VARCHAR#,APP_LON=#APP_LON:FLOAT#,APP_LAT=#APP_LAT:FLOAT#,RADIUS=#RADIUS:INTEGER#,COMPANY_ADDRESS=#COMPANY_ADDRESS:VARCHAR#,
		CUSTOMER_MANAGER_NAME=#CUSTOMER_MANAGER_NAME:VARCHAR#,CUSTOMER_MANAGER_PHONE=#CUSTOMER_MANAGER_PHONE:INTEGER#,CONTACT_NAME=#CONTACT_NAME:VARCHAR#,CONTACT_PHONENUM=#CONTACT_PHONENUM:INTEGER#,GROUP_PERSON_NUMBER=#GROUP_PERSON_NUMBER:INTEGER# 
		WHERE 
		T.GROUP_ID=#GROUP_ID:VARCHAR# and T.EFFECTIVE_MARK = 1
	</update>
	<update id="updateANDROID_GROUP_CREATEDATE" parameterClass="java.util.HashMap">
		UPDATE
		TB_GROUP T 
		SET CREATE_TIME=#CREATE_TIME:TIMESTAMP# 
		WHERE 
		T.GROUP_ID=#GROUP_ID:VARCHAR# and T.EFFECTIVE_MARK = 1
	</update>
	<delete id="deleteANDROID_GROUP" parameterClass="java.util.HashMap">
		UPDATE
		TB_GROUP T 
		SET T.EFFECTIVE_MARK = 0
		WHERE T.GROUP_ID=#GROUP_ID:VARCHAR# and T.EFFECTIVE_MARK = 1
	</delete>
	
	<select id="getDetailedGroupCenterSelect" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select GROUP_ID||'_'||APP_LON||'_'||APP_LAT as SUBGROUP_IDS,SUBGROUP_ID,SUBGROUP_NAME,GROUP_NAME,GROUP_ID,EFFECTIVE_MARK,GPS_TYPE,POINT_SOURCE_TYPE,
		to_char(POINT_DEF_DATE,'yyyy-mm-dd') POINT_DEF_DATE,APP_LON,APP_LAT,RADIUS,OPERATE_MSISDN from TB_GROUP_CENTER where EFFECTIVE_MARK = 1 order by GROUP_ID
	</select>
	<delete id="deleteANDROID_GROUP_CENTER1" parameterClass="java.util.HashMap">
		UPDATE
		TB_GROUP_CENTER M 
		SET M.EFFECTIVE_MARK = 0
		WHERE M.GROUP_ID=#GROUP_ID:VARCHAR# and M.EFFECTIVE_MARK = 1
	</delete>
	<delete id="deleteANDROID_GROUP_CENTER" parameterClass="java.util.HashMap">
		UPDATE
		TB_GROUP_CENTER
		SET EFFECTIVE_MARK = 0
		WHERE GROUP_ID=#GROUP_ID:INTEGER# AND APP_LON=#APP_LON:FLOAT# AND APP_LAT=#APP_LAT:FLOAT#
	</delete>
	<insert id="insertANDROID_GROUP_CENTER" parameterClass="java.util.HashMap">
		INSERT INTO
		TB_GROUP_CENTER
		(SUBGROUP_ID,SUBGROUP_NAME,GROUP_NAME,GROUP_ID,EFFECTIVE_MARK,GPS_TYPE,POINT_SOURCE_TYPE,
		POINT_DEF_DATE,APP_LON,APP_LAT,RADIUS,OPERATE_MSISDN)
		VALUES
		(#SUBGROUP_ID:INTEGER#,#SUBGROUP_NAME:VARCHAR#,#GROUP_NAME:VARCHAR#,#GROUP_ID:VARCHAR#,#EFFECTIVE_MARK:INTEGER#,#GPS_TYPE:VARCHAR#,
		#POINT_SOURCE_TYPE:INTEGER#,#POINT_DEF_DATE:DATE#,#APP_LON:FLOAT#,#APP_LAT:FLOAT#,#RADIUS:INTEGER#,#OPERATE_MSISDN:INTEGER#)
	</insert>
	<select id="getSelectProblemPoint_GX" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT T.ID,T.PROBLEM_TYPE,to_char(T.TEST_TIME,'yyyy-mm-dd hh24:mi:ss') AS TEST_TIME_DATE,
		T.IS_SOLVE
		<isEqual property="STATE" compareValue="1">
			,T.GROUP_NAME FROM TB_GROUP_PROBLEM_POINT T 
		</isEqual>
		<isEqual property="STATE" compareValue="2">
			,T.STREET_ADDRESS AS GROUP_NAME FROM TB_CUSTOMER_PROBLEM_POINT T 
		</isEqual>
		where 1 = 1
		<isNotEmpty property="STARTTIME" prepend=" and ">
			T.TEST_TIME&gt;#STARTTIME:TIMESTAMP#
		</isNotEmpty>
		<isNotEmpty property="ENDTIME" prepend=" and ">
			T.TEST_TIME&lt;#ENDTIME:TIMESTAMP#
		</isNotEmpty>
		order by T.TEST_TIME DESC
	</select>
	<select id="getProblemPoint_GX" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT T.*,to_char(T.TEST_TIME,'yyyy-mm-dd hh24:mi:ss') AS TEST_TIME_DATE,
		to_char(T.SOLVE_TIME,'yyyy-mm-dd') AS SOLVE_TIME_DATE 
		<isEqual property="STATE" compareValue="1">
			,to_char(T.FIRST_CATCH_TIME,'yyyy-mm-dd hh24:mi:ss') AS FIRST_CATCH_TIME_DATE,
			to_char(T.LAST_CATCH_TIME,'yyyy-mm-dd hh24:mi:ss') AS LAST_CATCH_TIME_DATE
			FROM TB_GROUP_PROBLEM_POINT T 
		</isEqual>
		<isEqual property="STATE" compareValue="2">
			FROM TB_CUSTOMER_PROBLEM_POINT T 
		</isEqual>
		where T.ID=#ID:INTEGER#
		order by T.TEST_TIME DESC
	</select>
	
	<select id="getDetailedDiceRoleSelect" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT *
		FROM BTU_DIC T WHERE T.DIC_TYPE_CODE=133 order by T.DIC_KEY
	</select>
	<select id="getDetailedDictSceneSelect" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT *
		FROM BTU_DIC T WHERE T.DIC_TYPE_CODE=132 order by T.DIC_KEY
	</select>
	<select id="getDetailedDictCustomSelect" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT *
		FROM BTU_DIC T WHERE T.DIC_TYPE_CODE=135
	</select>
	<select id="getDetailedDictGroupSelect" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT *
		FROM BTU_DIC T WHERE T.DIC_TYPE_CODE=134 order by T.DIC_KEY
	</select>
	<select id="getDetailedDiceFTPSelect" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT T.DIC_DESC,T.DIC_VALUE FROM BTU_DIC T WHERE T.DIC_KEY=137
	</select>
	<select id="getDetailedProblemPointSelect" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT T.ID,T.GROUP_NAME,T.PROBLEM_TYPE 
		FROM TB_GROUP_PROBLEM_POINT T WHERE T.CUSTOMER_MANAGER_PHONE=#CUSTOMER_MANAGER_PHONE:INTEGER# and T.PUSH_STATE = 1
		AND T.LAST_CATCH_TIME&gt;#STARTTIME:TIMESTAMP#
		AND T.LAST_CATCH_TIME&lt;#ENDTIME:TIMESTAMP#
		union all
		SELECT T.ID,T.SCENE_TYPE,T.PROBLEM_TYPE 
		FROM TB_CUSTOMER_PROBLEM_POINT T WHERE T.CUSTOMER_PHONE=#CUSTOMER_MANAGER_PHONE:INTEGER# and T.PUSH_STATE = 1
		AND T.TEST_TIME&gt;#STARTTIME:TIMESTAMP#
		AND T.TEST_TIME&lt;#ENDTIME:TIMESTAMP#
	</select>
	<update id="updateANDROID_PROBLEM_POINT" parameterClass="java.util.HashMap">
		UPDATE
		TB_GROUP_PROBLEM_POINT T 
		SET T.PUSH_STATE = 2
		WHERE 
		T.CUSTOMER_MANAGER_PHONE=#CUSTOMER_MANAGER_PHONE:INTEGER#
	</update>
	<update id="updateANDROID_PROBLEM_POINT1" parameterClass="java.util.HashMap">
		UPDATE
		TB_CUSTOMER_PROBLEM_POINT T 
		SET T.PUSH_STATE = 2
		WHERE 
		T.CUSTOMER_PHONE=#CUSTOMER_MANAGER_PHONE:INTEGER#
	</update>
	<select id="selectGROUP_PROBLEM_POINT_ALL" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		 SELECT T.ID,T.GROUP_ID,T.IS_CLAIM,T.REPLY_STATE,T.PUSH_STATE,T.IS_SOLVE,T.APP_LON,T.APP_LAT
	    FROM TB_GROUP_PROBLEM_POINT T
	  	WHERE T.REPLY_STATE = #REPLY_STATE:INTEGER#
	  	AND T.CELL_NET_TYPE = #CELL_NET_TYPE:INTEGER#
	  	AND T.PROBLEM_TYPE IN ($PROBLEM_TYPE$)
	  	AND T.TEST_TIME&gt;#STARTTIME:TIMESTAMP#
		AND T.TEST_TIME&lt;#ENDTIME:TIMESTAMP#
		ORDER BY T.TEST_TIME DESC
	</select>
	<select id="selectGROUP_PROBLEM_POINT" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		 SELECT T.ID,T.GROUP_ID,T.IS_CLAIM,T.REPLY_STATE,T.PUSH_STATE,T.IS_SOLVE,T.APP_LON,T.APP_LAT
	    FROM TB_GROUP_PROBLEM_POINT T
	  	WHERE T.REPLY_STATE = #REPLY_STATE:INTEGER#
	  	AND T.CELL_NET_TYPE = #CELL_NET_TYPE:INTEGER#
	  	AND T.PROBLEM_TYPE IN ($PROBLEM_TYPE$)
	  	AND T.SUBGROUP_ID = #SUBGROUP_ID:VARCHAR#
	  	AND T.TEST_TIME&gt;#STARTTIME:TIMESTAMP#
		AND T.TEST_TIME&lt;#ENDTIME:TIMESTAMP#
		ORDER BY T.TEST_TIME DESC
	</select>
	<select id="selectGROUP_PROBLEM_POINT_PHONE" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		 SELECT T.ID,T.GROUP_ID,T.IS_CLAIM,T.REPLY_STATE,T.PUSH_STATE,T.IS_SOLVE,T.APP_LON,T.APP_LAT
	    FROM TB_GROUP_PROBLEM_POINT T
	  	WHERE T.REPLY_STATE = #REPLY_STATE:INTEGER#
	  	AND T.CELL_NET_TYPE = #CELL_NET_TYPE:INTEGER#
	  	AND T.PROBLEM_TYPE IN ($PROBLEM_TYPE$)
	  	AND T.CUSTOMER_PHONE = #CUSTOMER_PHONE:INTEGER#
	  	AND T.TEST_TIME&gt;#STARTTIME:TIMESTAMP#
		AND T.TEST_TIME&lt;#ENDTIME:TIMESTAMP#
		ORDER BY T.TEST_TIME DESC
	</select>
	<select id="selectZELOT_PUBLIC_TABLE_PROBLEM" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		 SELECT to_char(T.TEST_TIME,'yyyy-mm-dd hh24:mi:ss') as TEST_TIME, T.P_VALUE,T.APP_LON,T.APP_LAT 
		 FROM TB_GROUP_EVENT_POINT T 
		 WHERE T.PROBLEM_ID=#PROBLEM_ID:INTEGER#
		 AND T.PROBLEM_TYPE IN ($PROBLEM_TYPE$)
		ORDER BY T.TEST_TIME DESC
	</select>
	<select id="selectCUSTOM_PROBLEM_POINT_ALL" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		 SELECT T.LONGITUDE,T.LATITUDE,T.IS_CLAIM,T.REPLY_STATE,T.PUSH_STATE,T.IS_SOLVE,
		to_char(T.TEST_TIME,'yyyy-mm-dd hh24:mi:ss') as TEST_TIME,M.APP_AVERAGE,TRUNC(M.APP_SUCC_RECEIVED_NUMBER/M.APP_SENT_NUMBER,3) AS APP_AVG,M.APP_LON,M.APP_LAT 
	    FROM TB_CUSTOMER_PROBLEM_POINT T,ZEALOT_PUBLIC_TABLE M
      	WHERE T.CUSTOMER_PHONE = M.APP_MSISDN
      	AND M.APP_PROBLEM = 1
	  	AND T.REPLY_STATE = #REPLY_STATE:INTEGER#
	  	AND T.CELL_NET_TYPE = #CELL_NET_TYPE:INTEGER#
	  	AND T.PROBLEM_TYPE IN ($PROBLEM_TYPE$)
	  	AND T.TEST_TIME&gt;#STARTTIME:TIMESTAMP#
		AND T.TEST_TIME&lt;#ENDTIME:TIMESTAMP#
		ORDER BY T.TEST_TIME DESC
	</select>
	<select id="selectCUSTOM_PROBLEM_POINT" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		 SELECT T.LONGITUDE,T.LATITUDE,T.IS_CLAIM,T.REPLY_STATE,T.PUSH_STATE,T.IS_SOLVE,
		to_char(T.TEST_TIME,'yyyy-mm-dd hh24:mi:ss') as TEST_TIME,M.APP_AVERAGE,TRUNC(M.APP_SUCC_RECEIVED_NUMBER/M.APP_SENT_NUMBER,3) AS APP_AVG,M.APP_LON,M.APP_LAT 
	    FROM TB_CUSTOMER_PROBLEM_POINT T,ZEALOT_PUBLIC_TABLE M
      	WHERE T.CUSTOMER_PHONE = M.APP_MSISDN
      	AND M.APP_PROBLEM = 1
	  	AND T.REPLY_STATE = #REPLY_STATE:INTEGER#
	  	AND T.CELL_NET_TYPE = #CELL_NET_TYPE:INTEGER#
	  	AND T.PROBLEM_TYPE IN ($PROBLEM_TYPE$)
	  	AND T.SUBGROUP_ID = #SUBGROUP_ID:VARCHAR#
	  	AND T.TEST_TIME&gt;#STARTTIME:TIMESTAMP#
		AND T.TEST_TIME&lt;#ENDTIME:TIMESTAMP#
		ORDER BY T.TEST_TIME DESC
	</select>
	<select id="selectCUSTOM_PROBLEM_POINT_PHONE" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		 SELECT T.LONGITUDE,T.LATITUDE,T.IS_CLAIM,T.REPLY_STATE,T.PUSH_STATE,T.IS_SOLVE,
		to_char(T.TEST_TIME,'yyyy-mm-dd hh24:mi:ss') as TEST_TIME,M.APP_AVERAGE,TRUNC(M.APP_SUCC_RECEIVED_NUMBER/M.APP_SENT_NUMBER,3) AS APP_AVG
	    FROM TB_CUSTOMER_PROBLEM_POINT T,ZEALOT_PUBLIC_TABLE M
      	WHERE T.CUSTOMER_PHONE = M.APP_MSISDN
      	AND M.APP_PROBLEM = 1
	  	AND T.REPLY_STATE = #REPLY_STATE:INTEGER#
	  	AND T.CELL_NET_TYPE = #CELL_NET_TYPE:INTEGER#
	  	AND T.PROBLEM_TYPE IN ($PROBLEM_TYPE$)
	  	AND T.SUBGROUP_ID = #SUBGROUP_ID:VARCHAR#
	  	AND T.TEST_TIME&gt;#STARTTIME:TIMESTAMP#
		AND T.TEST_TIME&lt;#ENDTIME:TIMESTAMP#
		ORDER BY T.TEST_TIME DESC
	</select>
	<insert id="insertANDROID_GROUP_OPERATION" parameterClass="java.util.HashMap">
		INSERT INTO 
		TB_GROUP_OPERATION 
		(SUBGROUP_ID,SUBGROUP_NAME,COUNTY_TOWN_NAME,GROUP_NAME,COUNTY_TOWN_TYPE,GROUP_ID,SCENE_TYPE,SCENE_TYPE_ID,GPS_TYPE,APP_LON,APP_LAT,RADIUS,CUSTOMER_MANAGER_NAME,CUSTOMER_MANAGER_PHONE,CONTACT_NAME,CONTACT_PHONENUM,GROUP_PERSON_NUMBER,GROUP_OPERATION_TIME,OPERATION_TYPE,GROUP_OPERATION_TYPE,GROUP_OPERATIONPERSON_TYPE_ID,GROUP_OPERATIONPERSON_TYPE,GROUP_OPERATIONPERSON_ISDN)
		VALUES 
		(#SUBGROUP_ID:INTEGER#,#SUBGROUP_NAME:VARCHAR#,#COUNTY_TOWN_NAME:VARCHAR#,#GROUP_NAME:VARCHAR#,#COUNTY_TOWN_TYPE:VARCHAR#,#GROUP_ID:VARCHAR#,#SCENE_TYPE:VARCHAR#,#SCENE_TYPE_ID:INTEGER#,#GPS_TYPE:VARCHAR#,#APP_LON:FLOAT#,#APP_LAT:FLOAT#,
		#RADIUS:INTEGER#,#CUSTOMER_MANAGER_NAME:VARCHAR#,#CUSTOMER_MANAGER_PHONE:INTEGER#,#CONTACT_NAME:VARCHAR#,#CONTACT_PHONENUM:INTEGER#,#GROUP_PERSON_NUMBER:INTEGER#,#GROUP_OPERATION_TIME:TIMESTAMP#,#OPERATION_TYPE:VARCHAR#,#GROUP_OPERATION_TYPE:VARCHAR#,#GROUP_OPERATIONPERSON_TYPE_ID:VARCHAR#,#GROUP_OPERATIONPERSON_TYPE:INTEGER#,#GROUP_OPERATIONPERSON_ISDN:INTEGER#)
	</insert>
	<select id="getDetailedworkParamSelect" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT T.CELL_NAME 
		FROM WORKING_PARAMETERS_INFO T WHERE T.CELL_NETWORKTYPE=#CELL_NETWORKTYPE:VARCHAR# AND T.CELL_TAC_LAC=#CELL_TAC_LAC:INTEGER# AND T.CELL_ECGI=#CELL_ID:INTEGER# 
	</select>
	
	<insert id="insertANDROID_TEST_FTP" parameterClass="java.util.HashMap">
		INSERT INTO
		ANDROID_TEST_FTP
		(LOGTIME,IMEI,IMSI,MSISDN,MANUFACTURE,TYPECODE,OS,BASEBAND,KERNEL,FAC_VER,NET_TYPE,NET_NAME,IP,MAC_ADD,MCC,MNC,LAC,CI,RXLEVEL,GROUP_ID,GROUP_NAME,LON,LAT,LOCATION,FTP_PATH,FLAG,FILE_SIZE,FTP_DATA_SIZE,MAX_SPEED,MIN_SPEED,FTP_CON_STIME,FTP_CON_ETIME,FTP_CON_TYPE,FTP_LOGIN_STIME,FTP_LOGIN_ETIME,FTP_LOGIN_TYPE,FTP_REQ_TIME,FTP_RES_TIME,FTP_RES_TYPE,SUBGROUP_ID,SUBGROUP_NAME,COUNTY_TOWN_NAME,STREET_NAME,STREET_NUMBERL,DOWNLOAD_TIME,VERSION_CODE,FTP_FIRST_TIME,SHAKE_NUMBER,QUALITY_STATE,MNC2,NET,LAC1,CI1,RXLEVEL1,SCELL_PCI,RSRQ,VERSION,TEST_SCENARIO,TEST_LOCATION,CRS_SINR)
		VALUES
		(#LOGTIME:TIMESTAMP#,#IMEI:VARCHAR#,#IMSI:VARCHAR#,#MSISDN:VARCHAR#,#MANUFACTURE:VARCHAR#,#TYPECODE:VARCHAR#,#OS:VARCHAR#,
		#BASEBAND:VARCHAR#,#KERNEL:VARCHAR#,#FAC_VER:VARCHAR#,#NET_TYPE:VARCHAR#,#NET_NAME:VARCHAR#,#IP:VARCHAR#,#MAC_ADD:VARCHAR#,#MCC:VARCHAR#,
		#MNC:VARCHAR#,#LAC:VARCHAR#,#CI:VARCHAR#,#RXLEVEL:INTEGER#,#GROUP_ID:VARCHAR#,#GROUP_NAME:VARCHAR#,#LON:FLOAT#,#LAT:FLOAT#,#LOCATION:VARCHAR#,
		#FTP_PATH:VARCHAR#,#FLAG:INTEGER#,#FILE_SIZE:INTEGER#,#FTP_DATA_SIZE:INTEGER#,#MAX_SPEED:FLOAT#,#MIN_SPEED:FLOAT#,#FTP_CON_STIME:TIMESTAMP#,
		#FTP_CON_ETIME:TIMESTAMP#,#FTP_CON_TYPE:VARCHAR#,#FTP_LOGIN_STIME:TIMESTAMP#,#FTP_LOGIN_ETIME:TIMESTAMP#,#FTP_LOGIN_TYPE:VARCHAR#,#FTP_REQ_TIME:TIMESTAMP#,
		#FTP_RES_TIME:TIMESTAMP#,#FTP_RES_TYPE:TIMESTAMP#,#SUBGROUP_ID:VARCHAR#,#SUBGROUP_NAME:VARCHAR#,#COUNTY_TOWN_NAME:VARCHAR#,#STREET_NAME:VARCHAR#,#STREET_NUMBERL:VARCHAR#,#DOWNLOAD_TIME:FLOAT#,#VERSION_CODE:VARCHAR#,#FTP_FIRST_TIME:TIMESTAMP#,#SHAKE_NUMBER:INTEGER#,#QUALITY_STATE:INTEGER#,#MNC2:INTEGER#
		,#NET:VARCHAR#,#LAC1:VARCHAR#,#CI1:VARCHAR#,#RXLEVEL1:INTEGER#,#SCELL_PCI:INTEGER#,#RSRQ:FLOAT#,#VERSION:VARCHAR#,#TEST_SCENARIO:VARCHAR#,#TEST_LOCATION:VARCHAR#,#CRS_SINR:FLOAT#
		)
	</insert>

	<insert id="insertANDROID_TEST_HTTP" parameterClass="java.util.HashMap">
		INSERT INTO
		ANDROID_TEST_HTTP
		(LOGTIME,IMEI,IMSI,MSISDN,MANUFACTURE,TYPECODE,OS,BASEBAND,KERNEL,FAC_VER,NET_TYPE,NET_NAME,IP,MAC_ADD,MCC,MNC,LAC,CI,RXLEVEL,GROUP_ID,GROUP_NAME,LON,LAT,LOCATION,HTTP_URL,HTTP_IP,HTTP_LOG,DNS_CONFIG,HTTP_DATA_SIZE,MAX_SPEED,MIN_SPEED,HTTP_CON_STIME,HTTP_CON_ETIME,HTTP_CON_STATUS,HTTP_TRANS_ETIME,HTTP_STATUS,HTTP_WORST_URL,HTTP_WORST_IP,HTTP_WORST_DATASIZE,HTTP_WORST_TIMEINTERVAL,SUBGROUP_ID,SUBGROUP_NAME,COUNTY_TOWN_NAME,STREET_NAME,STREET_NUMBERL,DOWNLOAD_TIME,USER_FEELING_TIME,VERSION_CODE,SHAKE_NUMBER,RESOLUTION_STATUS,QUALITY_STATE,MNC2,NET,LAC1,CI1,RXLEVEL1,SCELL_PCI,RSRQ,VERSION,TEST_SCENARIO,TEST_LOCATION,IS_PUBLIC_LOG,CRS_SINR)
		VALUES
		(#LOGTIME:TIMESTAMP#,#IMEI:VARCHAR#,#IMSI:VARCHAR#,#MSISDN:VARCHAR#,#MANUFACTURE:VARCHAR#,#TYPECODE:VARCHAR#,#OS:VARCHAR#,
		#BASEBAND:VARCHAR#,#KERNEL:VARCHAR#,#FAC_VER:VARCHAR#,#NET_TYPE:VARCHAR#,#NET_NAME:VARCHAR#,#IP:VARCHAR#,#MAC_ADD:VARCHAR#,#MCC:VARCHAR#,
		#MNC:VARCHAR#,#LAC:VARCHAR#,#CI:VARCHAR#,#RXLEVEL:INTEGER#,#GROUP_ID:VARCHAR#,#GROUP_NAME:VARCHAR#,#LON:FLOAT#,#LAT:FLOAT#,#LOCATION:VARCHAR#,
		#HTTP_URL:VARCHAR#,#HTTP_IP:VARCHAR#,#HTTP_LOG:VARCHAR#,#DNS_CONFIG:VARCHAR#,#HTTP_DATA_SIZE:INTEGER#,#MAX_SPEED:FLOAT#,
		#MIN_SPEED:FLOAT#,#HTTP_CON_STIME:TIMESTAMP#,#HTTP_CON_ETIME:TIMESTAMP#,#HTTP_CON_STATUS:VARCHAR#,#HTTP_TRANS_ETIME:TIMESTAMP#,
		#HTTP_STATUS:VARCHAR#,#HTTP_WORST_URL:VARCHAR#,#HTTP_WORST_IP:VARCHAR#,#HTTP_WORST_DATASIZE:INTEGER#,
		#HTTP_WORST_TIMEINTERVAL:FLOAT#,#SUBGROUP_ID:VARCHAR#,#SUBGROUP_NAME:VARCHAR#,#COUNTY_TOWN_NAME:VARCHAR#,#STREET_NAME:VARCHAR#,#STREET_NUMBERL:VARCHAR#,#DOWNLOAD_TIME:FLOAT#,#USER_FEELING_TIME:FLOAT#,#VERSION_CODE:VARCHAR#,#SHAKE_NUMBER:INTEGER#,#RESOLUTION_STATUS:INTEGER#,#QUALITY_STATE:INTEGER#,#MNC2:INTEGER#
		,#NET:VARCHAR#,#LAC1:VARCHAR#,#CI1:VARCHAR#,#RXLEVEL1:INTEGER#,#SCELL_PCI:INTEGER#,#RSRQ:FLOAT#,#VERSION:VARCHAR#,#TEST_SCENARIO:VARCHAR#,#TEST_LOCATION:VARCHAR#,#IS_PUBLIC_LOG:VARCHAR#,#CRS_SINR:FLOAT#
		)
	</insert>
	<insert id="insertANDROID_TEST_HTTP_UP" parameterClass="java.util.HashMap">
		INSERT
		INTO
		ANDROID_TEST_HTTP_UP
		(LOGTIME,IMEI,IMSI,MSISDN,MANUFACTURE,TYPECODE,OS,BASEBAND,KERNEL,FAC_VER,NET_TYPE,NET_NAME,IP,MAC_ADD,MCC,MNC,LAC,CI,RXLEVEL,GROUP_ID,GROUP_NAME,LON,LAT,LOCATION,HTTP_URL,HTTP_IP,HTTP_LOG,DNS_CONFIG,HTTP_DATA_SIZE,MAX_SPEED,MIN_SPEED,HTTP_CON_STIME,HTTP_CON_ETIME,HTTP_CON_STATUS,HTTP_TRANS_ETIME,HTTP_STATUS,HTTP_WORST_URL,HTTP_WORST_IP,HTTP_WORST_DATASIZE,HTTP_WORST_TIMEINTERVAL,SUBGROUP_ID,SUBGROUP_NAME,COUNTY_TOWN_NAME,STREET_NAME,STREET_NUMBERL,UPLOAD_TIME,USER_FEELING_TIME,VERSION_CODE,SHAKE_NUMBER,RESOLUTION_STATUS,QUALITY_STATE,MNC2,NET,LAC1,CI1,RXLEVEL1,SCELL_PCI,RSRQ,VERSION,TEST_SCENARIO,TEST_LOCATION,IS_PUBLIC_LOG)
		VALUES
		(#LOGTIME:TIMESTAMP#,#IMEI:VARCHAR#,#IMSI:VARCHAR#,#MSISDN:VARCHAR#,#MANUFACTURE:VARCHAR#,#TYPECODE:VARCHAR#,#OS:VARCHAR#,
		#BASEBAND:VARCHAR#,#KERNEL:VARCHAR#,#FAC_VER:VARCHAR#,#NET_TYPE:VARCHAR#,#NET_NAME:VARCHAR#,#IP:VARCHAR#,#MAC_ADD:VARCHAR#,#MCC:VARCHAR#,
		#MNC:VARCHAR#,#LAC:VARCHAR#,#CI:VARCHAR#,#RXLEVEL:INTEGER#,#GROUP_ID:VARCHAR#,#GROUP_NAME:VARCHAR#,#LON:FLOAT#,#LAT:FLOAT#,#LOCATION:VARCHAR#,
		#HTTP_URL:VARCHAR#,#HTTP_IP:VARCHAR#,#HTTP_LOG:VARCHAR#,#DNS_CONFIG:VARCHAR#,#HTTP_DATA_SIZE:INTEGER#,#MAX_SPEED:FLOAT#,
		#MIN_SPEED:FLOAT#,#HTTP_CON_STIME:TIMESTAMP#,#HTTP_CON_ETIME:TIMESTAMP#,#HTTP_CON_STATUS:VARCHAR#,#HTTP_TRANS_ETIME:TIMESTAMP#,
		#HTTP_STATUS:VARCHAR#,#HTTP_WORST_URL:VARCHAR#,#HTTP_WORST_IP:VARCHAR#,#HTTP_WORST_DATASIZE:INTEGER#,
		#HTTP_WORST_TIMEINTERVAL:FLOAT#,#SUBGROUP_ID:VARCHAR#,#SUBGROUP_NAME:VARCHAR#,#COUNTY_TOWN_NAME:VARCHAR#,#STREET_NAME:VARCHAR#,#STREET_NUMBERL:VARCHAR#,#UPLOAD_TIME:FLOAT#,#USER_FEELING_TIME:FLOAT#,#VERSION_CODE:VARCHAR#,#SHAKE_NUMBER:INTEGER#,#RESOLUTION_STATUS:INTEGER#,#QUALITY_STATE:INTEGER#,#MNC2:INTEGER#
		,#NET:VARCHAR#,#LAC1:VARCHAR#,#CI1:VARCHAR#,#RXLEVEL1:INTEGER#,#SCELL_PCI:INTEGER#,#RSRQ:FLOAT#,#VERSION:VARCHAR#,#TEST_SCENARIO:VARCHAR#,#TEST_LOCATION:VARCHAR#,#IS_PUBLIC_LOG:VARCHAR#
		)
	</insert>
	<insert id="insertANDROID_TEST_PING" parameterClass="java.util.HashMap">
		INSERT INTO
		ANDROID_TEST_PING
		(LOGTIME,IMEI,IMSI,MSISDN,MANUFACTURE,TYPECODE,OS,BASEBAND,KERNEL,FAC_VER,NET_TYPE,NET_NAME,IP,MAC_ADD,MCC,MNC,LAC,CI,RXLEVEL,GROUP_ID,GROUP_NAME,LON,LAT,LOCATION,INPUT_ADDRESS,DNS_ADDRESS,DNS_IP_ADDRESS,SENT_NUMBER,SENT_INTERVAL,PACKET_BYTES,SUCC_RECEIVED_NUMBER,SUCC_RECEIVED_RATE,RECEIVED_MIN_DURATION,RECEIVED_MAX_DURATION,RECEIVED_AVG_DURATION,SHAKE,TTL_MIN,TTL_MAX,RESULT,SUBGROUP_ID,SUBGROUP_NAME,COUNTY_TOWN_NAME,STREET_NAME,STREET_NUMBERL,VERSION_CODE,QUALITY_STATE,MNC2,NET,LAC1,CI1,RXLEVEL1,SCELL_PCI,RSRQ,VERSION,TEST_SCENARIO,TEST_LOCATION,IS_PUBLIC_LOG,CRS_SINR)
		VALUES
		(#LOGTIME:TIMESTAMP#,#IMEI:VARCHAR#,#IMSI:VARCHAR#,#MSISDN:VARCHAR#,#MANUFACTURE:VARCHAR#,#TYPECODE:VARCHAR#,#OS:VARCHAR#,
		#BASEBAND:VARCHAR#,#KERNEL:VARCHAR#,#FAC_VER:VARCHAR#,#NET_TYPE:VARCHAR#,#NET_NAME:VARCHAR#,#IP:VARCHAR#,#MAC_ADD:VARCHAR#,#MCC:VARCHAR#,
		#MNC:VARCHAR#,#LAC:VARCHAR#,#CI:VARCHAR#,#RXLEVEL:INTEGER#,#GROUP_ID:VARCHAR#,#GROUP_NAME:VARCHAR#,#LON:FLOAT#,#LAT:FLOAT#,#LOCATION:VARCHAR#,
		#INPUT_ADDRESS:VARCHAR#,#DNS_ADDRESS:VARCHAR#,#DNS_IP_ADDRESS:VARCHAR#,#SENT_NUMBER:INTEGER#,#SENT_INTERVAL:INTEGER#,#PACKET_BYTES:INTEGER#,
		#SUCC_RECEIVED_NUMBER:INTEGER#,#SUCC_RECEIVED_RATE:INTEGER#,#RECEIVED_MIN_DURATION:FLOAT#,#RECEIVED_MAX_DURATION:FLOAT#,
		#RECEIVED_AVG_DURATION:FLOAT#,#SHAKE:FLOAT#,#TTL_MIN:INTEGER#,#TTL_MAX:INTEGER#,#RESULT:VARCHAR#,#SUBGROUP_ID:VARCHAR#,#SUBGROUP_NAME:VARCHAR#,#COUNTY_TOWN_NAME:VARCHAR#,#STREET_NAME:VARCHAR#,#STREET_NUMBERL:VARCHAR#,#VERSION_CODE:VARCHAR#,#QUALITY_STATE:INTEGER#,#MNC2:INTEGER#
		,#NET:VARCHAR#,#LAC1:VARCHAR#,#CI1:VARCHAR#,#RXLEVEL1:INTEGER#,#SCELL_PCI:INTEGER#,#RSRQ:FLOAT#,#VERSION:VARCHAR#,#TEST_SCENARIO:VARCHAR#,#TEST_LOCATION:VARCHAR#,#IS_PUBLIC_LOG:VARCHAR#,#CRS_SINR:FLOAT#
		)
	</insert>

	<insert id="insertANDROID_TEST_VIDEO" parameterClass="java.util.HashMap">
		INSERT INTO
		ANDROID_TEST_VIDEO
		(IMEI,IMSI,MSISDN,MANUFACTURE,TYPECODE,OS,BASEBAND,KERNEL,FAC_VER,LOGTIME,NET_TYPE,NET_NAME,IP,MAC_ADD,MCC,MNC,LAC,CI,RXLEVEL,GROUP_ID,GROUP_NAME,SUBGROUP_ID,SUBGROUP_NAME,COUNTY_TOWN_NAME,STREET_NAME,STREET_NUMBERL,LON,LAT,LOCATION,VIDEO_URL,VIDEO_LOG,DNS_CONFIG,FILE_BIT_RATE,ENCODING_INFORMATION,PROGRAM_TIME,VIDEO_DATA_SIZE,MAX_SPEED,MIN_SPEED,VIDEO_CON_STIME,VIDEO_CON_ETIME,VIDEO_CON_TIME,VIDEO_CON_STATUS,VIDEO_CUSHION_TIME,VIDEO_CUSHION_TOTAL_TIME,VIDEO_CUSHION_NUMBER,VIDEO_START_TIME,VIDEO_END_TIME,VIDEO_PLAY_TIME,VIDEO_OPEN_TIME,VIDEO_TRANS_STIME,VIDEO_TRANS_ETIME,DOWNLOAD_TIME,VIDEO_OPEN_RESULT,QUALITY_STATE,VERSION_CODE,SHAKE_NUMBER,AVERAGE_SPEED,MNC2,NET,LAC1,CI1,RXLEVEL1,SCELL_PCI,RSRQ,VERSION,TEST_SCENARIO,TEST_LOCATION,CRS_SINR)
		VALUES
		(#IMEI:VARCHAR#,#IMSI:VARCHAR#,#MSISDN:VARCHAR#,#MANUFACTURE:VARCHAR#,#TYPECODE:VARCHAR#,#OS:VARCHAR#,#BASEBAND:VARCHAR#,
		#KERNEL:VARCHAR#,#FAC_VER:VARCHAR#,#LOGTIME:TIMESTAMP#,#NET_TYPE:VARCHAR#,#NET_NAME:VARCHAR#,#IP:VARCHAR#,#MAC_ADD:VARCHAR#,#MCC:VARCHAR#,
		#MNC:VARCHAR#,#LAC:VARCHAR#,#CI:VARCHAR#,#RXLEVEL:INTEGER#,#GROUP_ID:VARCHAR#,#GROUP_NAME:VARCHAR#,#SUBGROUP_ID:VARCHAR#,
		#SUBGROUP_NAME:VARCHAR#,#COUNTY_TOWN_NAME:VARCHAR#,#STREET_NAME:VARCHAR#,#STREET_NUMBERL:VARCHAR#,#LON:FLOAT#,#LAT:FLOAT#,
		#LOCATION:VARCHAR#,#VIDEO_URL:VARCHAR#,#VIDEO_LOG:VARCHAR#,#DNS_CONFIG:VARCHAR#,#FILE_BIT_RATE:VARCHAR#,#ENCODING_INFORMATION:VARCHAR#,
		#PROGRAM_TIME:INTEGER#,#VIDEO_DATA_SIZE:INTEGER#,#MAX_SPEED:FLOAT#,#MIN_SPEED:FLOAT#,#VIDEO_CON_STIME:TIMESTAMP#,#VIDEO_CON_ETIME:TIMESTAMP#,
		#VIDEO_CON_TIME:TIMESTAMP#,#VIDEO_CON_STATUS:VARCHAR#,#VIDEO_CUSHION_TIME:FLOAT#,#VIDEO_CUSHION_TOTAL_TIME:FLOAT#,
		#VIDEO_CUSHION_NUMBER:INTEGER#,#VIDEO_START_TIME:TIMESTAMP#,#VIDEO_END_TIME:TIMESTAMP#,#VIDEO_PLAY_TIME:FLOAT#,#VIDEO_OPEN_TIME:FLOAT#,
		#VIDEO_TRANS_STIME:TIMESTAMP#,#VIDEO_TRANS_ETIME:TIMESTAMP#,#DOWNLOAD_TIME:FLOAT#,#VIDEO_OPEN_RESULT:INTEGER#,#QUALITY_STATE:INTEGER#,
		#VERSION_CODE:VARCHAR#,#SHAKE_NUMBER:INTEGER#,#AVERAGE_SPEED:FLOAT#,#MNC2:INTEGER#
		,#NET:VARCHAR#,#LAC1:VARCHAR#,#CI1:VARCHAR#,#RXLEVEL1:INTEGER#,#SCELL_PCI:INTEGER#,#RSRQ:FLOAT#,#VERSION:VARCHAR#,#TEST_SCENARIO:VARCHAR#,#TEST_LOCATION:VARCHAR#,#CRS_SINR:FLOAT#
		)
	</insert>

	<insert id="insertANDROID_TEST_VOICE" parameterClass="java.util.HashMap">
		INSERT INTO
		ANDROID_TEST_VOICE
		(IMEI,IMSI,MSISDN,MANUFACTURE,TYPECODE,OS,BASEBAND,KERNEL,FAC_VER,LOGTIME,NET_TYPE,
		NET,NET_NAME,IP,MAC_ADD,MCC,MNC,LAC,CI,LAC1,CI1,RXLEVEL,RXLEVEL1,SCELL_PCI,
		RSRQ,GROUP_ID,GROUP_NAME,SUBGROUP_ID,SUBGROUP_NAME,COUNTY_TOWN_NAME,STREET_NAME,
		STREET_NUMBERL,TEST_SCENARIO,TEST_LOCATION,LON,LAT,VERSION,VERSION_CODE,LOCATION,
		QUALITY_STATE,CALL_NUMBER,RESULT,CRS_SINR
		)
		VALUES
		(#IMEI:VARCHAR#,#IMSI:VARCHAR#,#MSISDN:VARCHAR#,#MANUFACTURE:VARCHAR#,#TYPECODE:VARCHAR#,
		#OS:VARCHAR#,#BASEBAND:VARCHAR#,#KERNEL:VARCHAR#,#FAC_VER:VARCHAR#,#LOGTIME:TIMESTAMP#,
		#NET_TYPE:VARCHAR#,#NET:VARCHAR#,#NET_NAME:VARCHAR#,#IP:VARCHAR#,#MAC_ADD:VARCHAR#,
		#MCC:VARCHAR#,#MNC:VARCHAR#,#LAC:VARCHAR#,#CI:VARCHAR#,#LAC1:VARCHAR#,#CI1:VARCHAR#,
		#RXLEVEL:INTEGER#,#RXLEVEL1:INTEGER#,#SCELL_PCI:INTEGER#,#RSRQ:FLOAT#,
		#GROUP_ID:VARCHAR#,#GROUP_NAME:VARCHAR#,#SUBGROUP_ID:VARCHAR#,#SUBGROUP_NAME:VARCHAR#,
		#COUNTY_TOWN_NAME:VARCHAR#,#STREET_NAME:VARCHAR#,#STREET_NUMBERL:VARCHAR#,#TEST_SCENARIO:VARCHAR#,
		#TEST_LOCATION:VARCHAR#,#LON:FLOAT#,#LAT:FLOAT#,#VERSION:VARCHAR#,#VERSION_CODE:VARCHAR#,
		#LOCATION:VARCHAR#,#QUALITY_STATE:INTEGER#,#CALL_NUMBER:VARCHAR#,#RESULT:VARCHAR#,#CRS_SINR:FLOAT#
		)
	</insert>

	<insert id="insertANDROID_TEST_NETWORK" parameterClass="java.util.HashMap">
		INSERT
		INTO ANDROID_TEST_NETWORK (
		IMEI,IMSI,MSISDN,MANUFACTURE,TYPECODE,OS,BASEBAND,KERNEL,FAC_VER,LOGTIME,NET_TYPE,
		NET,NET_NAME,IP,MAC_ADD,MCC,MNC,LAC,CI,LAC1,CI1,RXLEVEL,RXLEVEL1,SCELL_PCI,CRS_SINR,
		RSRQ,GROUP_ID,GROUP_NAME,SUBGROUP_ID,SUBGROUP_NAME,COUNTY_TOWN_NAME,STREET_NAME,
		STREET_NUMBERL,TEST_SCENARIO,TEST_LOCATION,LON,LAT,VERSION,VERSION_CODE,LOCATION,
		QUALITY_STATE,CALL_NUMBER,RESULT
		)
		VALUES
		(#IMEI:VARCHAR#,#IMSI:VARCHAR#,#MSISDN:VARCHAR#,#MANUFACTURE:VARCHAR#,#TYPECODE:VARCHAR#,
		#OS:VARCHAR#,#BASEBAND:VARCHAR#,#KERNEL:VARCHAR#,#FAC_VER:VARCHAR#,#LOGTIME:TIMESTAMP#,
		#NET_TYPE:VARCHAR#,#NET:VARCHAR#,#NET_NAME:VARCHAR#,#IP:VARCHAR#,#MAC_ADD:VARCHAR#,
		#MCC:VARCHAR#,#MNC:VARCHAR#,#LAC:VARCHAR#,#CI:VARCHAR#,#LAC1:VARCHAR#,#CI1:VARCHAR#,
		#RXLEVEL:INTEGER#,#RXLEVEL1:INTEGER#,,#SCELL_PCI:INTEGER#,#CRS_SINR:FLOAT#,#RSRQ:FLOAT#
		,#GROUP_ID:VARCHAR#,#GROUP_NAME:VARCHAR#,#SUBGROUP_ID:VARCHAR#,#SUBGROUP_NAME:VARCHAR#,
		#COUNTY_TOWN_NAME:VARCHAR#,#STREET_NAME:VARCHAR#,#STREET_NUMBERL:VARCHAR#,
		#TEST_SCENARIO:VARCHAR#,#TEST_LOCATION:VARCHAR#,#LON:FLOAT#,#LAT:FLOAT#,
		#VERSION:VARCHAR#,#VERSION_CODE:VARCHAR#,#LOCATION:VARCHAR#,#QUALITY_STATE:INTEGER#
		,#CALL_NUMBER:VARCHAR#,#RESULT:VARCHAR#)
	</insert>

	<insert id="insertANDROID_TEST_PROBLEM" parameterClass="java.util.HashMap">
		<selectKey resultClass="string" keyProperty="ID">
			SELECT
			PROBLEM_REPORT_ID_SEQUENCE.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO ANDROID_TEST_PROBLEM_REPORT
		(ID,TYPECODE,FAC_VER,KERNEL,IMEI,MANUFACTURE,BASEBAND,IMSI,OS,MSISDN,PROBLEM_TIME,PROBLEM_REPORT_TIME,NET_TYPE,NET_NAME,IP,MAC_ADD,MCC,MNC,LAC,CI,RXLEVEL,GROUP_ID,GROUP_NAME,SUBGROUP_ID,SUBGROUP_NAME,COUNTY_TOWN_NAME,STREET_NAME,STREET_NUMBERL,LON,LAT,LOCATION,PHOTOS_NAME,QUESTION_BUSINESS_TYPE,INSTRUCTION_MANUAL,PROBLEM_DESCRIPTION,PROBLEM_PHOTOS,QUESTION_CLASSIFICATION,MNC2,AUDIO,
		NODEB,ARFCN,PCI,SINR,LOG_NAME,PROBLEM_STATE)
		VALUES
		(#ID:VARCHAR#,#TYPECODE:VARCHAR#,#FAC_VER:VARCHAR#,#KERNEL:VARCHAR#,#IMEI:VARCHAR#,#MANUFACTURE:VARCHAR#,#BASEBAND:VARCHAR#,#IMSI:VARCHAR#,
		#OS:VARCHAR#,#MSISDN:VARCHAR#,#PROBLEM_TIME:TIMESTAMP#,#PROBLEM_REPORT_TIME:TIMESTAMP#,#NET_TYPE:VARCHAR#,#NET_NAME:VARCHAR#,
		#IP:VARCHAR#,#MAC_ADD:VARCHAR#,#MCC:VARCHAR#,#MNC:VARCHAR#,#LAC:VARCHAR#,#CI:VARCHAR#,#RXLEVEL:INTEGER#,#GROUP_ID:VARCHAR#,
		#GROUP_NAME:VARCHAR#,#SUBGROUP_ID:VARCHAR#,#SUBGROUP_NAME:VARCHAR#,#COUNTY_TOWN_NAME:VARCHAR#,#STREET_NAME:VARCHAR#,#STREET_NUMBERL:VARCHAR#,
		#LON:VARCHAR#,#LAT:VARCHAR#,#LOCATION:VARCHAR#,#PHOTOS_NAME:VARCHAR#,#QUESTION_BUSINESS_TYPE:INTEGER#,#INSTRUCTION_MANUAL:INTEGER#,
		#PROBLEM_DESCRIPTION:VARCHAR#,#PROBLEM_PHOTOS:VARCHAR#,#QUESTION_CLASSIFICATION:INTEGER#,#MNC2:INTEGER#,#AUDIO:VARCHAR#,
		#NODEB:VARCHAR#,#ARFCN:VARCHAR#,#PCI:VARCHAR#,#SINR:VARCHAR#,#LOG_NAME:VARCHAR#,#PROBLEM_STATE:INTEGER#)
	</insert>

	<insert id="insertANDROID_TEST_PUBLICLOG" parameterClass="java.util.HashMap">
		INSERT
		INTO ZEALOT_PUBLIC_TABLE
		(APP_AVERAGE,APP_BASEBAND,APP_CI,APP_CON_ETIME,APP_CON_STIME,APP_CON_TYPE,APP_COUNTY_TOWN_NAME,APP_CRS_SINR,APP_CUSHION_NUMBER,APP_CUSHION_TIME,APP_CUSHION_TOTAL_TIME,APP_DATA_SIZE,APP_DOWNLOAD_TIME,APP_ECI,APP_ENCODING_INFORMATION,APP_FAC_VER,APP_FILE_BIT_RATE,APP_GROUP_ID,APP_GROUP_NAME,APP_IMEI,APP_IMSI,APP_IS_PUBLIC_LOG,APP_KERNEL,APP_LAC,APP_LAT,APP_LOCATION,APP_LOGIN_ETIME,APP_LOGIN_STIME,APP_LOGIN_TYPE,APP_LOGTIME,APP_LON,APP_MANUFACTURE,APP_MAX,APP_MCC,APP_MIN,APP_MNC,APP_MSISDN,APP_NET_NAME,APP_NET_TYPE,APP_OPEN_TIME,APP_OS,APP_PLAY_TIME,APP_PROBLEM,APP_PROGRAM_TIME,APP_QUALITY_STATE,APP_REQ_TIME,APP_RES_TIME,APP_RES_TYPE,APP_RSRP,APP_RSRQ,APP_RXLEVEL,APP_SCELL_PCI,APP_SENT_NUMBER,APP_SERVICEREQUEST,APP_SHAKE_NUMBER,APP_STREET_NAME,APP_STREET_NUMBERL,APP_SUBGROUP_ID,APP_SUBGROUP_NAME,APP_SUCC_RECEIVED_NUMBER,APP_TAC,APP_TEST_LOCATION,APP_TEST_SCENARIO,APP_TTL_MAX,APP_TTL_MIN,APP_TYPECODE,APP_URL,APP_USER_FEELING_TIME,APP_VERSION,APP_VERSION_CODE,APP_GPS_COORDINATE,APP_SOFT_VERSION,APP_QUALITY_CAUSE,APP_SERVICE_NAME,APP_SERVICE_IP,PERSON_TYPE_ID,PERSON_TYPE,SCENE_GROUP_TYPE_ID,SCENE_GROUP_TYPE,SCENE_TYPE_ID,SCENE_TYPE,GROUP_ID,GROUP_POINT,APP_START_TYPE_ID,APP_START_TYPE,MAIN_SENCE,MAIN_SENCE_ID,ATTACHED_SENCE,ATTACHED_SENCE_ID)
		VALUES
		(#APP_AVERAGE:FLOAT#,#APP_BASEBAND:VARCHAR#,#APP_CI:VARCHAR#,#APP_CON_ETIME:TIMESTAMP#,#APP_CON_STIME:TIMESTAMP#,#APP_CON_TYPE:INTEGER#,#APP_COUNTY_TOWN_NAME:VARCHAR#,#APP_CRS_SINR:FLOAT#,#APP_CUSHION_NUMBER:FLOAT#,#APP_CUSHION_TIME:FLOAT#,#APP_CUSHION_TOTAL_TIME:FLOAT#,#APP_DATA_SIZE:INTEGER#,#APP_DOWNLOAD_TIME:FLOAT#,#APP_ECI:VARCHAR#,#APP_ENCODING_INFORMATION:VARCHAR#,#APP_FAC_VER:VARCHAR#,#APP_FILE_BIT_RATE:VARCHAR#,#APP_GROUP_ID:VARCHAR#,#APP_GROUP_NAME:VARCHAR#,#APP_IMEI:VARCHAR#,#APP_IMSI:VARCHAR#,#APP_IS_PUBLIC_LOG:VARCHAR#,#APP_KERNEL:VARCHAR#,#APP_LAC:VARCHAR#,#APP_LAT:FLOAT#,#APP_LOCATION:VARCHAR#,#APP_LOGIN_ETIME:TIMESTAMP#,#APP_LOGIN_STIME:TIMESTAMP#,#APP_LOGIN_TYPE:VARCHAR#,#APP_LOGTIME:TIMESTAMP#,#APP_LON:FLOAT#,#APP_MANUFACTURE:VARCHAR#,#APP_MAX:FLOAT#,#APP_MCC:VARCHAR#,#APP_MIN:FLOAT#,#APP_MNC:VARCHAR#,#APP_MSISDN:VARCHAR#,#APP_NET_NAME:VARCHAR#,#APP_NET_TYPE:VARCHAR#,#APP_OPEN_TIME:FLOAT#,#APP_OS:VARCHAR#,#APP_PLAY_TIME:FLOAT#,#APP_PROBLEM:INTEGER#,#APP_PROGRAM_TIME:INTEGER#,#APP_QUALITY_STATE:INTEGER#,#APP_REQ_TIME:TIMESTAMP#,#APP_RES_TIME:TIMESTAMP#,#APP_RES_TYPE:VARCHAR#,#APP_RSRP:INTEGER#,#APP_RSRQ:FLOAT#,#APP_RXLEVEL:INTEGER#,#APP_SCELL_PCI:INTEGER#,#APP_SENT_NUMBER:INTEGER#,#APP_SERVICEREQUEST:VARCHAR#,#APP_SHAKE_NUMBER:INTEGER#,#APP_STREET_NAME:VARCHAR#,#APP_STREET_NUMBERL:VARCHAR#,#APP_SUBGROUP_ID:VARCHAR#,#APP_SUBGROUP_NAME:VARCHAR#,#APP_SUCC_RECEIVED_NUMBER:INTEGER#,#APP_TAC:VARCHAR#,#APP_TEST_LOCATION:VARCHAR#,#APP_TEST_SCENARIO:VARCHAR#,#APP_TTL_MAX:INTEGER#,#APP_TTL_MIN:INTEGER#,#APP_TYPECODE:VARCHAR#,#APP_URL:VARCHAR#,#APP_USER_FEELING_TIME:FLOAT#,#APP_VERSION:INTEGER#,#APP_VERSION_CODE:VARCHAR#,#APP_GPS_COORDINATE:VARCHAR#,#APP_SOFT_VERSION:VARCHAR#,#APP_QUALITY_CAUSE:VARCHAR#,#APP_SERVICE_NAME:VARCHAR#,#APP_SERVICE_IP:VARCHAR#,#APP_ROLE_ID:INTEGER#,#APP_ROLE_NAME:VARCHAR#,#APP_SCENE_TYPE_ID:INTEGER#,#APP_SCENE_TYPE_NAME:VARCHAR#,#APP_SCENE_ID:INTEGER#,#APP_SCENE_NAME:VARCHAR#,#APP_GROUP_CUSTOM_ID:VARCHAR#,#APP_GROUP_CUSTOM_NAME:VARCHAR#,#APP_START_TYPE_ID:INTEGER#,#APP_START_TYPE:VARCHAR#,#MAIN_SENCE:VARCHAR#,#MAIN_SENCE_ID:INTEGER#,#ATTACHED_SENCE:VARCHAR#,#ATTACHED_SENCE_ID:INTEGER#)
	</insert>
	
	<insert id="insertANDROID_TEST_BACK" parameterClass="java.util.HashMap">
		INSERT
		INTO ZEALOT_PUBLIC_BACK
		(APP_AVERAGE,APP_BASEBAND,APP_CI,APP_CON_ETIME,APP_CON_STIME,APP_CON_TYPE,APP_COUNTY_TOWN_NAME,APP_CRS_SINR,APP_CUSHION_NUMBER,APP_CUSHION_TIME,APP_CUSHION_TOTAL_TIME,APP_DATA_SIZE,APP_DOWNLOAD_TIME,APP_ECI,APP_ENCODING_INFORMATION,APP_FAC_VER,APP_FILE_BIT_RATE,APP_GROUP_ID,APP_GROUP_NAME,APP_IMEI,APP_IMSI,APP_IS_PUBLIC_LOG,APP_KERNEL,APP_LAC,APP_LAT,APP_LOCATION,APP_LOGIN_ETIME,APP_LOGIN_STIME,APP_LOGIN_TYPE,APP_LOGTIME,APP_LON,APP_MANUFACTURE,APP_MAX,APP_MCC,APP_MIN,APP_MNC,APP_MSISDN,APP_NET_NAME,APP_NET_TYPE,APP_OPEN_TIME,APP_OS,APP_PLAY_TIME,APP_PROBLEM,APP_PROGRAM_TIME,APP_QUALITY_STATE,APP_REQ_TIME,APP_RES_TIME,APP_RES_TYPE,APP_RSRP,APP_RSRQ,APP_RXLEVEL,APP_SCELL_PCI,APP_SENT_NUMBER,APP_SERVICEREQUEST,APP_SHAKE_NUMBER,APP_STREET_NAME,APP_STREET_NUMBERL,APP_SUBGROUP_ID,APP_SUBGROUP_NAME,APP_SUCC_RECEIVED_NUMBER,APP_TAC,APP_TEST_LOCATION,APP_TEST_SCENARIO,APP_TTL_MAX,APP_TTL_MIN,APP_TYPECODE,APP_URL,APP_USER_FEELING_TIME,APP_VERSION,APP_VERSION_CODE,APP_GPS_COORDINATE,APP_SOFT_VERSION,APP_QUALITY_CAUSE,APP_SERVICE_NAME,APP_SERVICE_IP)
		VALUES
		(#APP_AVERAGE:FLOAT#,#APP_BASEBAND:VARCHAR#,#APP_CI:VARCHAR#,#APP_CON_ETIME:TIMESTAMP#,#APP_CON_STIME:TIMESTAMP#,#APP_CON_TYPE:INTEGER#,#APP_COUNTY_TOWN_NAME:VARCHAR#,#APP_CRS_SINR:FLOAT#,#APP_CUSHION_NUMBER:FLOAT#,#APP_CUSHION_TIME:FLOAT#,#APP_CUSHION_TOTAL_TIME:FLOAT#,#APP_DATA_SIZE:INTEGER#,#APP_DOWNLOAD_TIME:FLOAT#,#APP_ECI:VARCHAR#,#APP_ENCODING_INFORMATION:VARCHAR#,#APP_FAC_VER:VARCHAR#,#APP_FILE_BIT_RATE:VARCHAR#,#APP_GROUP_ID:VARCHAR#,#APP_GROUP_NAME:VARCHAR#,#APP_IMEI:VARCHAR#,#APP_IMSI:VARCHAR#,#APP_IS_PUBLIC_LOG:VARCHAR#,#APP_KERNEL:VARCHAR#,#APP_LAC:VARCHAR#,#APP_LAT:FLOAT#,#APP_LOCATION:VARCHAR#,#APP_LOGIN_ETIME:TIMESTAMP#,#APP_LOGIN_STIME:TIMESTAMP#,#APP_LOGIN_TYPE:VARCHAR#,#APP_LOGTIME:TIMESTAMP#,#APP_LON:FLOAT#,#APP_MANUFACTURE:VARCHAR#,#APP_MAX:FLOAT#,#APP_MCC:VARCHAR#,#APP_MIN:FLOAT#,#APP_MNC:VARCHAR#,#APP_MSISDN:VARCHAR#,#APP_NET_NAME:VARCHAR#,#APP_NET_TYPE:VARCHAR#,#APP_OPEN_TIME:FLOAT#,#APP_OS:VARCHAR#,#APP_PLAY_TIME:FLOAT#,#APP_PROBLEM:INTEGER#,#APP_PROGRAM_TIME:INTEGER#,#APP_QUALITY_STATE:INTEGER#,#APP_REQ_TIME:TIMESTAMP#,#APP_RES_TIME:TIMESTAMP#,#APP_RES_TYPE:VARCHAR#,#APP_RSRP:INTEGER#,#APP_RSRQ:FLOAT#,#APP_RXLEVEL:INTEGER#,#APP_SCELL_PCI:INTEGER#,#APP_SENT_NUMBER:INTEGER#,#APP_SERVICEREQUEST:VARCHAR#,#APP_SHAKE_NUMBER:INTEGER#,#APP_STREET_NAME:VARCHAR#,#APP_STREET_NUMBERL:VARCHAR#,#APP_SUBGROUP_ID:VARCHAR#,#APP_SUBGROUP_NAME:VARCHAR#,#APP_SUCC_RECEIVED_NUMBER:INTEGER#,#APP_TAC:VARCHAR#,#APP_TEST_LOCATION:VARCHAR#,#APP_TEST_SCENARIO:VARCHAR#,#APP_TTL_MAX:INTEGER#,#APP_TTL_MIN:INTEGER#,#APP_TYPECODE:VARCHAR#,#APP_URL:VARCHAR#,#APP_USER_FEELING_TIME:FLOAT#,#APP_VERSION:INTEGER#,#APP_VERSION_CODE:VARCHAR#,#APP_GPS_COORDINATE:VARCHAR#,#APP_SOFT_VERSION:VARCHAR#,#APP_QUALITY_CAUSE:VARCHAR#,#APP_SERVICE_NAME:VARCHAR#,#APP_SERVICE_IP:VARCHAR#)
	</insert>
	
	<select id="selectSCORE_FTP_GROUP" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		100*sum(decode(t.ftp_login_type,'230',1,0))/count(t.ftp_login_type) as
		ftp_login_succ_fre,
		100*sum(decode(t.ftp_con_type,'220',1,0))/count(t.ftp_con_type) as
		ftp_con_succ_fre,
		100*sum(decode(t.ftp_res_type,'150',1,0))/count(t.ftp_res_type) as
		ftp_down_succ_fre,
		nvl(t.GROUP_NAME,'unknow') as GROUP_NAME,
		sum(FTP_DATA_SIZE)/1024 as FTP_DATA_SIZE,
		decode(sum(DOWNLOAD_TIME),0,0,sum(FTP_DATA_SIZE)/sum(DOWNLOAD_TIME)*8/1000)
		AS avgspeed, sum(rxlevel)/count(rxlevel) as avg_rxlevel, t.group_id
		FROM ANDROID_TEST_FTP T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR#)
		and T.LOGTIME&gt;#STARTTIME:TIMESTAMP#
		AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by t.group_id,t.GROUP_NAME
		order by avgspeed desc
	</select>

	<select id="selectSCORE_FTP_SUBGROUP" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		100*sum(decode(t.ftp_login_type,'230',1,0))/count(t.ftp_login_type) as
		ftp_login_succ_fre,
		100*sum(decode(t.ftp_con_type,'220',1,0))/count(t.ftp_con_type) as
		ftp_con_succ_fre,
		100*sum(decode(t.ftp_res_type,'150',1,0))/count(t.ftp_res_type) as
		ftp_down_succ_fre,
		nvl(t.subgroup_name,'unknow') as
		SUBGROUP_NAME,sum(FTP_DATA_SIZE)/1024 as FTP_DATA_SIZE,
		decode(sum(DOWNLOAD_TIME),0,0,sum(FTP_DATA_SIZE)/sum(DOWNLOAD_TIME)*8/1000)
		AS avgspeed, sum(rxlevel)/count(rxlevel) as avg_rxlevel, t.group_id,
		t.subgroup_id FROM ANDROID_TEST_FTP T
		WHERE
		(T.NET_TYPE=#NET_TYPE1:VARCHAR# or T.NET_TYPE=#NET_TYPE2:VARCHAR#)
		and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by
		t.group_id,t.subgroup_id,t.subgroup_name order by avgspeed desc
	</select>

	<select id="selectSCORE_HTTP_GROUP" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		100*sum(decode(t.http_con_status,'200',1,0))/count(t.http_con_status)
		as http_first_post_succ_fre, nvl(t.GROUP_NAME,'unknow') as
		GROUP_NAME,sum(HTTP_DATA_SIZE)/1024 as
		HTTP_DATA_SIZE,decode(sum(DOWNLOAD_TIME),0,0,sum(HTTP_DATA_SIZE)/sum(DOWNLOAD_TIME)*8/1000)
		AS avgspeed, sum(rxlevel)/count(rxlevel) as avg_rxlevel, t.group_id
		FROM ANDROID_TEST_HTTP T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR#)
		and T.LOGTIME&gt;#STARTTIME:TIMESTAMP#
		AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by t.group_id,t.GROUP_NAME
		order by avgspeed desc
	</select>

	<select id="selectSCORE_HTTP_SUBGROUP" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		100*sum(decode(t.http_con_status,'200',1,0))/count(t.http_con_status)
		as http_first_post_succ_fre, nvl(t.subgroup_name,'unknow') as
		SUBGROUP_NAME,sum(HTTP_DATA_SIZE)/1024 as
		HTTP_DATA_SIZE,decode(sum(DOWNLOAD_TIME),0,0,sum(HTTP_DATA_SIZE)/sum(DOWNLOAD_TIME)*8/1000)
		AS avgspeed, sum(rxlevel)/count(rxlevel) as avg_rxlevel, t.group_id,
		t.subgroup_id FROM ANDROID_TEST_HTTP T
		WHERE
		(T.NET_TYPE=#NET_TYPE1:VARCHAR# or T.NET_TYPE=#NET_TYPE2:VARCHAR#)
		and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by
		t.group_id,t.subgroup_id,t.subgroup_name order by avgspeed desc
	</select>

	<select id="selectSCORE_PING_GROUP" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		nvl(100*sum(t.succ_received_number)/sum(t.sent_number),0) as
		ping_succ_fre,nvl(sum(t.sent_number),0) as
		ping_send_count,nvl(sum(t.succ_received_number),0) as
		ping_receive_count,sum(t.received_avg_duration) /
		count(t.received_avg_duration) as
		ping_avg_used_time,nvl(sum(t.rxlevel) / count(t.rxlevel),0) as
		ping_avg_level,max(t.received_max_duration) as
		received_max_duration,min(t.received_min_duration) as
		received_min_duration,sum(t.shake) / count(t.shake) as
		shake,count(distinct t.lac || t.ci) as lacci,nvl(t.group_name,
		'unknow') as group_name,t.group_id as group_id FROM ANDROID_TEST_PING
		T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR#)
		and T.LOGTIME&gt;#STARTTIME:TIMESTAMP#
		AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by t.group_id,t.GROUP_NAME
		order by ping_succ_fre desc
	</select>

	<select id="selectSCORE_PING_SUBGROUP" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		nvl(sum(t.succ_received_number)/sum(t.sent_number),0) as
		ping_succ_fre,nvl(sum(t.sent_number),0) as
		ping_send_count,nvl(sum(t.succ_received_number),0) as
		ping_receive_count,sum(t.received_avg_duration) /
		count(t.received_avg_duration) as
		ping_avg_used_time,nvl(sum(t.rxlevel) / count(t.rxlevel),0) as
		ping_avg_level,max(t.received_max_duration) as
		received_max_duration,min(t.received_min_duration) as
		received_min_duration,sum(t.shake) / count(t.shake) as
		shake,count(distinct t.lac || t.ci) as lacci,nvl(t.subgroup_name,
		'unknow') as subgroup_name,t.group_id as group_id,t.subgroup_id as
		subgroup_id FROM ANDROID_TEST_PING T
		WHERE
		(T.NET_TYPE=#NET_TYPE1:VARCHAR# or T.NET_TYPE=#NET_TYPE2:VARCHAR#)
		and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by
		t.group_id,t.subgroup_id,t.subgroup_name order by ping_succ_fre desc
	</select>

	<select id="selectTopCitys_FTP" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select * from (SELECT
		100*sum(decode(t.ftp_login_type,'230',1,0))/count(t.ftp_login_type) as
		ftp_login_succ_fre,
		100*sum(decode(t.ftp_con_type,'220',1,0))/count(t.ftp_con_type) as
		ftp_con_succ_fre,
		100*sum(decode(t.ftp_res_type,'150',1,0))/count(t.ftp_res_type) as
		ftp_down_succ_fre,
		nvl(t.subgroup_name,'unknow') as
		SUBGROUP_NAME,sum(FTP_DATA_SIZE)/1024 as
		FTP_DATA_SIZE,decode(sum(DOWNLOAD_TIME),0,0,sum(FTP_DATA_SIZE)/sum(DOWNLOAD_TIME)*8/1000)
		AS avgspeed, sum(rxlevel)/count(rxlevel) as avg_rxlevel, t.subgroup_id
		FROM ANDROID_TEST_FTP T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR#)
		and T.LOGTIME&gt;#STARTTIME:TIMESTAMP#
		AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by
		t.subgroup_id,t.subgroup_name order by avgspeed desc) where
		rownum&gt;=1 and rownum&lt;=10
	</select>

	<select id="selectBottomCitys_FTP" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select * from (SELECT
		100*sum(decode(t.ftp_login_type,'230',1,0))/count(t.ftp_login_type) as
		ftp_login_succ_fre,
		100*sum(decode(t.ftp_con_type,'220',1,0))/count(t.ftp_con_type) as
		ftp_con_succ_fre,
		100*sum(decode(t.ftp_res_type,'150',1,0))/count(t.ftp_res_type) as
		ftp_down_succ_fre,
		nvl(t.subgroup_name,'unknow') as
		SUBGROUP_NAME,sum(FTP_DATA_SIZE)/1024 as
		FTP_DATA_SIZE,decode(sum(DOWNLOAD_TIME),0,0,sum(FTP_DATA_SIZE)/sum(DOWNLOAD_TIME)*8/1000)
		AS avgspeed, sum(rxlevel)/count(rxlevel) as avg_rxlevel, t.subgroup_id
		FROM ANDROID_TEST_FTP T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR#)
		and T.LOGTIME&gt;#STARTTIME:TIMESTAMP#
		AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by
		t.subgroup_id,t.subgroup_name order by avgspeed) where rownum&gt;=1
		and rownum&lt;=10
	</select>

	<select id="selectTopCitys_HTTP" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select * from (SELECT
		100*sum(decode(t.http_con_status,'200',1,0))/count(t.http_con_status)
		as http_first_post_succ_fre, nvl(t.subgroup_name,'unknow') as
		SUBGROUP_NAME,sum(HTTP_DATA_SIZE)/1024 as HTTP_DATA_SIZE,
		decode(sum(DOWNLOAD_TIME),0,0,sum(HTTP_DATA_SIZE)/sum(DOWNLOAD_TIME)*8/1000)
		AS avgspeed, sum(rxlevel)/count(rxlevel) as avg_rxlevel, t.subgroup_id
		FROM ANDROID_TEST_HTTP T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR#)
		and T.LOGTIME&gt;#STARTTIME:TIMESTAMP#
		AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by
		t.subgroup_id,t.subgroup_name order by avgspeed desc) where
		rownum&gt;=1 and rownum&lt;=10
	</select>

	<select id="selectBottomCitys_HTTP" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select * from (SELECT
		100*sum(decode(t.http_con_status,'200',1,0))/count(t.http_con_status)
		as http_first_post_succ_fre, nvl(t.subgroup_name,'unknow') as
		SUBGROUP_NAME,sum(HTTP_DATA_SIZE)/1024 as HTTP_DATA_SIZE,
		decode(sum(DOWNLOAD_TIME),0,0,sum(HTTP_DATA_SIZE)/sum(DOWNLOAD_TIME)*8/1000)
		AS avgspeed, sum(rxlevel)/count(rxlevel) as avg_rxlevel, t.subgroup_id
		FROM ANDROID_TEST_HTTP T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR#)
		and T.LOGTIME&gt;#STARTTIME:TIMESTAMP#
		AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by
		t.subgroup_id,t.subgroup_name order by avgspeed) where rownum&gt;=1
		and rownum&lt;=10
	</select>

	<select id="selectTopCitys_PING" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select * from (SELECT
		nvl(sum(t.succ_received_number)/sum(t.sent_number),0)
		as
		ping_succ_fre,nvl(sum(t.sent_number),0) as
		ping_send_count,nvl(sum(t.succ_received_number),0) as
		ping_receive_count,nvl(sum(t.received_avg_duration) /
		count(t.received_avg_duration),0) as
		ping_avg_used_time,nvl(sum(t.rxlevel) / count(t.rxlevel),0) as
		ping_avg_level,nvl(max(t.received_max_duration),0) as
		received_max_duration,nvl(min(t.received_min_duration),0) as
		received_min_duration,nvl(sum(t.shake) / count(t.shake),0) as
		shake,nvl(count(distinct t.lac || t.ci),0) as
		lacci,nvl(t.subgroup_name, 'unknow') as subgroup_name,t.group_id as
		group_id,t.subgroup_id as subgroup_id FROM ANDROID_TEST_PING T
		WHERE
		(T.NET_TYPE=#NET_TYPE1:VARCHAR# or T.NET_TYPE=#NET_TYPE2:VARCHAR#)
		and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by
		t.group_id,t.subgroup_id,t.subgroup_name order by ping_succ_fre desc)
		where rownum&gt;=1 and rownum&lt;=10
	</select>

	<select id="selectBottomCitys_PING" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select * from (SELECT
		nvl(sum(t.succ_received_number)/sum(t.sent_number),0)
		as
		ping_succ_fre,nvl(sum(t.sent_number),0) as
		ping_send_count,nvl(sum(t.succ_received_number),0) as
		ping_receive_count,nvl(sum(t.received_avg_duration) /
		count(t.received_avg_duration),0) as
		ping_avg_used_time,nvl(sum(t.rxlevel) / count(t.rxlevel),0) as
		ping_avg_level,nvl(max(t.received_max_duration),0) as
		received_max_duration,nvl(min(t.received_min_duration),0) as
		received_min_duration,nvl(sum(t.shake) / count(t.shake),0) as
		shake,nvl(count(distinct t.lac || t.ci),0) as
		lacci,nvl(t.subgroup_name, 'unknow') as subgroup_name,t.group_id as
		group_id,t.subgroup_id as subgroup_id FROM ANDROID_TEST_PING T
		WHERE
		(T.NET_TYPE=#NET_TYPE1:VARCHAR# or T.NET_TYPE=#NET_TYPE2:VARCHAR#)
		and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by
		t.group_id,t.subgroup_id,t.subgroup_name order by ping_succ_fre) where
		rownum&gt;=1 and rownum&lt;=10
	</select>

	<!-- new start -->
	<select id="selectPROVINCE_DATA_FTP" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		decode(sum(decode(t.FTP_RES_TYPE,226,t.DOWNLOAD_TIME,0)),0,0,0.001*8*sum(decode(t.FTP_RES_TYPE,226,t.FTP_DATA_SIZE,0))/sum(decode(t.FTP_RES_TYPE,226,t.DOWNLOAD_TIME,0)))
		as FTP_DOWN_SUCC_SPEED, nvl(t.GROUP_NAME,'unknow') as
		GROUP_NAME,nvl(decode(sum(t.DOWNLOAD_TIME),0,0,0.001*8*sum(t.FTP_DATA_SIZE)/sum(t.DOWNLOAD_TIME)),0)
		as
		FTP_DOWN_SPEED,decode(sum(decode(t.FTP_LOGIN_TYPE,230,1,0)),0,0,100*sum(decode(t.FTP_RES_TYPE,'226',1,0))/sum(decode(t.FTP_LOGIN_TYPE,230,1,0)))
		as FTP_DOWN_SUCC_FRE, nvl(t.GROUP_ID,'unknow') as GROUP_ID FROM
		ANDROID_TEST_FTP T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR#)
		and T.MNC2=#MNC2:INTEGER# and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by t.GROUP_ID,t.GROUP_NAME
		order by t.GROUP_NAME
	</select>

	<select id="selectPROVINCE_DATA_ALL_FTP" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		decode(sum(decode(t.FTP_RES_TYPE,226,t.DOWNLOAD_TIME,0)),0,0,0.001*8*sum(decode(t.FTP_RES_TYPE,226,t.FTP_DATA_SIZE,0))/sum(decode(t.FTP_RES_TYPE,226,t.DOWNLOAD_TIME,0)))
		as FTP_DOWN_SUCC_SPEED, nvl(t.GROUP_NAME,'unknow') as
		GROUP_NAME,nvl(decode(sum(t.DOWNLOAD_TIME),0,0,0.001*8*sum(t.FTP_DATA_SIZE)/sum(t.DOWNLOAD_TIME)),0)
		as
		FTP_DOWN_SPEED,decode(sum(decode(t.FTP_LOGIN_TYPE,230,1,0)),0,0,100*sum(decode(t.FTP_RES_TYPE,'226',1,0))/sum(decode(t.FTP_LOGIN_TYPE,230,1,0)))
		as FTP_DOWN_SUCC_FRE, nvl(t.GROUP_ID,'unknow') as GROUP_ID FROM
		ANDROID_TEST_FTP T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR# or
		T.NET_TYPE=#NET_TYPE3:VARCHAR# or
		T.NET_TYPE=#NET_TYPE4:VARCHAR# or
		T.NET_TYPE=#NET_TYPE5:VARCHAR# or
		T.NET_TYPE=#NET_TYPE6:VARCHAR#) and
		T.MNC2=#MNC2:INTEGER# and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by t.GROUP_ID,t.GROUP_NAME
		order by t.GROUP_NAME
	</select>

	<select id="selectCITY_DATA_FTP" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		decode(sum(decode(t.FTP_RES_TYPE,226,t.DOWNLOAD_TIME,0)),0,0,0.001*8*sum(decode(t.FTP_RES_TYPE,226,t.FTP_DATA_SIZE,0))/sum(decode(t.FTP_RES_TYPE,226,t.DOWNLOAD_TIME,0)))
		as FTP_DOWN_SUCC_SPEED, nvl(t.SUBGROUP_NAME,'unknow') as
		GROUP_NAME,nvl(decode(sum(t.DOWNLOAD_TIME),0,0,0.001*8*sum(t.FTP_DATA_SIZE)/sum(t.DOWNLOAD_TIME)),0)
		as
		FTP_DOWN_SPEED,decode(sum(decode(t.FTP_LOGIN_TYPE,230,1,0)),0,0,100*sum(decode(t.FTP_RES_TYPE,'226',1,0))/sum(decode(t.FTP_LOGIN_TYPE,230,1,0)))
		as FTP_DOWN_SUCC_FRE, nvl(t.SUBGROUP_ID,'unknow') as SUBGROUP_ID FROM
		ANDROID_TEST_FTP T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR#)
		and T.MNC2=#MNC2:INTEGER# and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by
		t.SUBGROUP_ID,t.SUBGROUP_NAME order by t.SUBGROUP_NAME
	</select>

	<select id="selectCITY_DATA_ALL_FTP" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		decode(sum(decode(t.FTP_RES_TYPE,226,t.DOWNLOAD_TIME,0)),0,0,0.001*8*sum(decode(t.FTP_RES_TYPE,226,t.FTP_DATA_SIZE,0))/sum(decode(t.FTP_RES_TYPE,226,t.DOWNLOAD_TIME,0)))
		as FTP_DOWN_SUCC_SPEED, nvl(t.SUBGROUP_NAME,'unknow') as
		GROUP_NAME,nvl(decode(sum(t.DOWNLOAD_TIME),0,0,0.001*8*sum(t.FTP_DATA_SIZE)/sum(t.DOWNLOAD_TIME)),0)
		as
		FTP_DOWN_SPEED,decode(sum(decode(t.FTP_LOGIN_TYPE,230,1,0)),0,0,100*sum(decode(t.FTP_RES_TYPE,'226',1,0))/sum(decode(t.FTP_LOGIN_TYPE,230,1,0)))
		as FTP_DOWN_SUCC_FRE, nvl(t.SUBGROUP_ID,'unknow') as SUBGROUP_ID FROM
		ANDROID_TEST_FTP T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR# or
		T.NET_TYPE=#NET_TYPE3:VARCHAR# or
		T.NET_TYPE=#NET_TYPE4:VARCHAR# or
		T.NET_TYPE=#NET_TYPE5:VARCHAR# or
		T.NET_TYPE=#NET_TYPE6:VARCHAR#) and
		T.MNC2=#MNC2:INTEGER# and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by
		t.SUBGROUP_ID,t.SUBGROUP_NAME order by t.SUBGROUP_NAME
	</select>

	<select id="selectDATA_FTP" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		decode(sum(decode(t.FTP_RES_TYPE,226,t.DOWNLOAD_TIME,0)),0,0,0.001*8*sum(decode(t.FTP_RES_TYPE,226,t.FTP_DATA_SIZE,0))/sum(decode(t.FTP_RES_TYPE,226,t.DOWNLOAD_TIME,0)))
		as FTP_DOWN_SUCC_SPEED, nvl(t.SUBGROUP_NAME,'unknow') as
		GROUP_NAME,nvl(decode(sum(t.DOWNLOAD_TIME),0,0,0.001*8*sum(t.FTP_DATA_SIZE)/sum(t.DOWNLOAD_TIME)),0)
		as
		FTP_DOWN_SPEED,decode(count(t.FTP_CON_TYPE),0,0,100*sum(decode(t.FTP_CON_TYPE,'220',1,0))/count(t.FTP_CON_TYPE))
		as
		FTP_CON_SUCC_FRE,100*sum(decode(t.FTP_LOGIN_TYPE,'230',1,0))/count(t.FTP_LOGIN_TYPE)
		as FTP_LOGIN_SUCC_FRE,
		decode(count(t.FTP_RES_TYPE),0,0,100*sum(decode(t.FTP_RES_TYPE,'226',1,0))/sum(decode(t.FTP_LOGIN_TYPE,230,1,0)))
		as FTP_DOWN_SUCC_FRE,nvl(sum(t.FTP_DATA_SIZE)/1024,0) as
		FTP_DATA_SIZE,nvl(sum(t.RXLEVEL)/count(t.RXLEVEL),0) as FTP_AVG_LEVEL,
		nvl(t.SUBGROUP_ID,'unknow') as SUBGROUP_ID FROM ANDROID_TEST_FTP T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR#) and T.MNC2=#MNC2:INTEGER# and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# AND T.GROUP_NAME=#GROUP_NAME:VARCHAR#
		group by t.SUBGROUP_ID,t.SUBGROUP_NAME order by t.SUBGROUP_NAME
	</select>

	<select id="selectDATA_ALL_FTP" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		decode(sum(decode(t.FTP_RES_TYPE,226,t.DOWNLOAD_TIME,0)),0,0,0.001*8*sum(decode(t.FTP_RES_TYPE,226,t.FTP_DATA_SIZE,0))/sum(decode(t.FTP_RES_TYPE,226,t.DOWNLOAD_TIME,0)))
		as FTP_DOWN_SUCC_SPEED, nvl(t.SUBGROUP_NAME,'unknow') as
		GROUP_NAME,nvl(decode(sum(t.DOWNLOAD_TIME),0,0,0.001*8*sum(t.FTP_DATA_SIZE)/sum(t.DOWNLOAD_TIME)),0)
		as
		FTP_DOWN_SPEED,decode(count(t.FTP_CON_TYPE),0,0,100*sum(decode(t.FTP_CON_TYPE,'220',1,0))/count(t.FTP_CON_TYPE))
		as
		FTP_CON_SUCC_FRE,100*sum(decode(t.FTP_LOGIN_TYPE,'230',1,0))/count(t.FTP_LOGIN_TYPE)
		as FTP_LOGIN_SUCC_FRE,
		decode(count(t.FTP_RES_TYPE),0,0,100*sum(decode(t.FTP_RES_TYPE,'226',1,0))/sum(decode(t.FTP_LOGIN_TYPE,230,1,0)))
		as FTP_DOWN_SUCC_FRE,nvl(sum(t.FTP_DATA_SIZE)/1024,0) as
		FTP_DATA_SIZE,nvl(sum(t.RXLEVEL)/count(t.RXLEVEL),0) as FTP_AVG_LEVEL,
		nvl(t.SUBGROUP_ID,'unknow') as SUBGROUP_ID FROM ANDROID_TEST_FTP T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR# or T.NET_TYPE=#NET_TYPE3:VARCHAR# or
		T.NET_TYPE=#NET_TYPE4:VARCHAR# or T.NET_TYPE=#NET_TYPE5:VARCHAR# or
		T.NET_TYPE=#NET_TYPE6:VARCHAR#) and T.MNC2=#MNC2:INTEGER# and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# AND T.GROUP_NAME=#GROUP_NAME:VARCHAR#
		group by t.SUBGROUP_ID,t.SUBGROUP_NAME order by t.SUBGROUP_NAME
	</select>

	<select id="selectPROVINCE_DATA_HTTP" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		nvl(decode(sum(t.DOWNLOAD_TIME),0,0,0.001*8*sum(t.HTTP_DATA_SIZE)/sum(t.DOWNLOAD_TIME)),0)
		as HTTP_DOWN_SPEED, nvl(t.GROUP_NAME,'unknow') as
		GROUP_NAME,nvl(decode(sum(t.USER_FEELING_TIME),0,0,0.001*8*sum(t.HTTP_DATA_SIZE)/sum(t.USER_FEELING_TIME)),0)
		as
		HTTP_USER_FEELING_SPEED,nvl(decode(sum(decode(t.USER_FEELING_TIME,0,0,1)),0,0,sum(t.USER_FEELING_TIME)/sum(decode(t.USER_FEELING_TIME,0,0,1))),0)
		AS HTTP_USER_FEELING_TIME, nvl(t.GROUP_ID,'unknow') as GROUP_ID FROM
		ANDROID_TEST_HTTP T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR#)
		and T.MNC2=#MNC2:INTEGER# and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by t.GROUP_ID,t.GROUP_NAME
		order by t.GROUP_NAME
	</select>

	<select id="selectPROVINCE_DATA_ALL_HTTP" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		nvl(decode(sum(t.DOWNLOAD_TIME),0,0,0.001*8*sum(t.HTTP_DATA_SIZE)/sum(t.DOWNLOAD_TIME)),0)
		as HTTP_DOWN_SPEED, nvl(t.GROUP_NAME,'unknow') as
		GROUP_NAME,nvl(decode(sum(t.USER_FEELING_TIME),0,0,0.001*8*sum(t.HTTP_DATA_SIZE)/sum(t.USER_FEELING_TIME)),0)
		as
		HTTP_USER_FEELING_SPEED,nvl(decode(sum(decode(t.USER_FEELING_TIME,0,0,1)),0,0,sum(t.USER_FEELING_TIME)/sum(decode(t.USER_FEELING_TIME,0,0,1))),0)
		AS HTTP_USER_FEELING_TIME, nvl(t.GROUP_ID,'unknow') as GROUP_ID FROM
		ANDROID_TEST_HTTP T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR# or
		T.NET_TYPE=#NET_TYPE3:VARCHAR# or
		T.NET_TYPE=#NET_TYPE4:VARCHAR# or
		T.NET_TYPE=#NET_TYPE5:VARCHAR# or
		T.NET_TYPE=#NET_TYPE6:VARCHAR#) and
		T.MNC2=#MNC2:INTEGER# and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by t.GROUP_ID,t.GROUP_NAME
		order by t.GROUP_NAME
	</select>

	<select id="selectCITY_DATA_HTTP" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		nvl(decode(sum(t.DOWNLOAD_TIME),0,0,0.001*8*sum(t.HTTP_DATA_SIZE)/sum(t.DOWNLOAD_TIME)),0)
		as HTTP_DOWN_SPEED, nvl(t.SUBGROUP_NAME,'unknow') as
		GROUP_NAME,nvl(decode(sum(t.USER_FEELING_TIME),0,0,0.001*8*sum(t.HTTP_DATA_SIZE)/sum(USER_FEELING_TIME)),0)
		as
		HTTP_USER_FEELING_SPEED,nvl(decode(sum(decode(t.USER_FEELING_TIME,0,0,1)),0,0,sum(t.USER_FEELING_TIME)/sum(decode(t.USER_FEELING_TIME,0,0,1))),0)
		AS HTTP_USER_FEELING_TIME, nvl(t.SUBGROUP_ID,'unknow') as SUBGROUP_ID
		FROM ANDROID_TEST_HTTP T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR#)
		and T.MNC2=#MNC2:INTEGER# and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by
		t.subgroup_id,t.SUBGROUP_NAME order by t.SUBGROUP_NAME
	</select>

	<select id="selectCITY_DATA_ALL_HTTP" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		nvl(decode(sum(t.DOWNLOAD_TIME),0,0,0.001*8*sum(t.HTTP_DATA_SIZE)/sum(t.DOWNLOAD_TIME)),0)
		as HTTP_DOWN_SPEED, nvl(t.SUBGROUP_NAME,'unknow') as
		GROUP_NAME,nvl(decode(sum(t.USER_FEELING_TIME),0,0,0.001*8*sum(t.HTTP_DATA_SIZE)/sum(USER_FEELING_TIME)),0)
		as
		HTTP_USER_FEELING_SPEED,nvl(decode(sum(decode(t.USER_FEELING_TIME,0,0,1)),0,0,sum(t.USER_FEELING_TIME)/sum(decode(t.USER_FEELING_TIME,0,0,1))),0)
		AS HTTP_USER_FEELING_TIME, nvl(t.SUBGROUP_ID,'unknow') as SUBGROUP_ID
		FROM ANDROID_TEST_HTTP T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR# or
		T.NET_TYPE=#NET_TYPE3:VARCHAR# or
		T.NET_TYPE=#NET_TYPE4:VARCHAR# or
		T.NET_TYPE=#NET_TYPE5:VARCHAR# or
		T.NET_TYPE=#NET_TYPE6:VARCHAR#) and
		T.MNC2=#MNC2:INTEGER# and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by
		t.subgroup_id,t.SUBGROUP_NAME order by t.SUBGROUP_NAME
	</select>

	<select id="selectDATA_HTTP" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		nvl(decode(sum(t.DOWNLOAD_TIME),0,0,0.001*8*sum(t.HTTP_DATA_SIZE)/sum(t.DOWNLOAD_TIME)),0)
		as HTTP_DOWN_SPEED, nvl(t.SUBGROUP_NAME,'unknow') as
		GROUP_NAME,nvl(decode(sum(t.USER_FEELING_TIME),0,0,0.001*8*sum(t.HTTP_DATA_SIZE)/sum(USER_FEELING_TIME)),0)
		as
		HTTP_USER_FEELING_SPEED,nvl(decode(nvl(sum(t.HTTP_CON_STATUS),0),0,0,100*sum(decode(t.HTTP_CON_STATUS,'200',1,0))/count(t.HTTP_CON_STATUS)),0)
		AS HTTP_FIRST_POST_SUCC_FRE, nvl(sum(HTTP_DATA_SIZE)/1024,0) as
		HTTP_TEST_DATA_SIZE,nvl(sum(t.DOWNLOAD_TIME),0) AS
		HTTP_DOWN_TIME,nvl(decode(sum(decode(t.USER_FEELING_TIME,0,0,1)),0,0,sum(t.USER_FEELING_TIME)),0)
		AS HTTP_USER_FEELING_TIME,
		nvl(decode(sum(t.RXLEVEL),0,0,sum(t.RXLEVEL)/count(t.RXLEVEL)),0) AS
		HTTP_AVG_LEVEl, nvl(t.SUBGROUP_ID,'unknow') as SUBGROUP_ID FROM
		ANDROID_TEST_HTTP T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR#)
		and T.MNC2=#MNC2:INTEGER# and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# AND T.GROUP_NAME=#GROUP_NAME:VARCHAR#
		group by T.SUBGROUP_ID,T.SUBGROUP_NAME order by T.SUBGROUP_NAME
	</select>

	<select id="selectDATA_ALL_HTTP" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		nvl(decode(sum(t.DOWNLOAD_TIME),0,0,0.001*8*sum(t.HTTP_DATA_SIZE)/sum(t.DOWNLOAD_TIME)),0)
		as HTTP_DOWN_SPEED, nvl(t.SUBGROUP_NAME,'unknow') as
		GROUP_NAME,nvl(decode(sum(t.USER_FEELING_TIME),0,0,0.001*8*sum(t.HTTP_DATA_SIZE)/sum(USER_FEELING_TIME)),0)
		as
		HTTP_USER_FEELING_SPEED,nvl(decode(nvl(sum(t.HTTP_CON_STATUS),0),0,0,100*sum(decode(t.HTTP_CON_STATUS,'200',1,0))/count(t.HTTP_CON_STATUS)),0)
		AS HTTP_FIRST_POST_SUCC_FRE, nvl(sum(HTTP_DATA_SIZE)/1024,0) as
		HTTP_TEST_DATA_SIZE,nvl(sum(t.DOWNLOAD_TIME),0) AS
		HTTP_DOWN_TIME,nvl(decode(sum(decode(t.USER_FEELING_TIME,0,0,1)),0,0,sum(t.USER_FEELING_TIME)),0)
		AS HTTP_USER_FEELING_TIME,
		nvl(decode(sum(t.RXLEVEL),0,0,sum(t.RXLEVEL)/count(t.RXLEVEL)),0) AS
		HTTP_AVG_LEVEl, nvl(t.SUBGROUP_ID,'unknow') as SUBGROUP_ID FROM
		ANDROID_TEST_HTTP T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR# or
		T.NET_TYPE=#NET_TYPE3:VARCHAR# or
		T.NET_TYPE=#NET_TYPE4:VARCHAR# or
		T.NET_TYPE=#NET_TYPE5:VARCHAR# or
		T.NET_TYPE=#NET_TYPE6:VARCHAR#) and
		T.MNC2=#MNC2:INTEGER# and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# AND T.GROUP_NAME=#GROUP_NAME:VARCHAR#
		group by T.SUBGROUP_ID,T.SUBGROUP_NAME order by T.SUBGROUP_NAME
	</select>

	<select id="selectPROVINCE_DATA_PING" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		nvl(sum(t.succ_received_number)/sum(t.sent_number)*100,0) AS
		PING_SUCC_FRE,nvl(sum(t.received_avg_duration) /
		count(t.received_avg_duration),0) AS
		PING_AVG_USED_TIME,nvl(t.GROUP_NAME,'unknow') as
		GROUP_NAME,nvl(t.group_id,'unknow') as GROUP_ID FROM ANDROID_TEST_PING
		T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR#)
		and T.MNC2=#MNC2:INTEGER# and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by t.group_id,t.GROUP_NAME
		order by t.GROUP_NAME
	</select>

	<select id="selectPROVINCE_DATA_ALL_PING" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		nvl(sum(t.succ_received_number)/sum(t.sent_number)*100,0) AS
		PING_SUCC_FRE,nvl(sum(t.received_avg_duration) /
		count(t.received_avg_duration),0) AS
		PING_AVG_USED_TIME,nvl(t.GROUP_NAME,'unknow') as
		GROUP_NAME,nvl(t.group_id,'unknow') as GROUP_ID FROM ANDROID_TEST_PING
		T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR# or
		T.NET_TYPE=#NET_TYPE3:VARCHAR# or
		T.NET_TYPE=#NET_TYPE4:VARCHAR# or
		T.NET_TYPE=#NET_TYPE5:VARCHAR# or
		T.NET_TYPE=#NET_TYPE6:VARCHAR#) and
		T.MNC2=#MNC2:INTEGER# and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by t.group_id,t.GROUP_NAME
		order by t.GROUP_NAME
	</select>

	<select id="selectCITY_DATA_PING" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		nvl(sum(t.succ_received_number)/sum(t.sent_number)*100,0) AS
		PING_SUCC_FRE,nvl(sum(t.received_avg_duration) /
		count(t.received_avg_duration),0) AS
		PING_AVG_USED_TIME,nvl(t.SUBGROUP_NAME,'unknow') as
		GROUP_NAME,nvl(t.subgroup_id,'unknow') as SUBGROUP_ID FROM
		ANDROID_TEST_PING T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR#)
		and T.MNC2=#MNC2:INTEGER# and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by
		t.subgroup_id,t.SUBGROUP_NAME order by t.SUBGROUP_NAME
	</select>

	<select id="selectCITY_DATA_ALL_PING" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		nvl(sum(t.succ_received_number)/sum(t.sent_number)*100,0) AS
		PING_SUCC_FRE,nvl(sum(t.received_avg_duration) /
		count(t.received_avg_duration),0) AS
		PING_AVG_USED_TIME,nvl(t.SUBGROUP_NAME,'unknow') as
		GROUP_NAME,nvl(t.subgroup_id,'unknow') as SUBGROUP_ID FROM
		ANDROID_TEST_PING T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR# or
		T.NET_TYPE=#NET_TYPE3:VARCHAR# or
		T.NET_TYPE=#NET_TYPE4:VARCHAR# or
		T.NET_TYPE=#NET_TYPE5:VARCHAR# or
		T.NET_TYPE=#NET_TYPE6:VARCHAR#) and
		T.MNC2=#MNC2:INTEGER# and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by
		t.subgroup_id,t.SUBGROUP_NAME order by t.SUBGROUP_NAME
	</select>

	<select id="selectDATA_PING" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		nvl(sum(t.succ_received_number)/sum(t.sent_number)*100,0) as
		PING_SUCC_FRE,nvl(sum(t.sent_number),0) as
		PING_SEND_COUNT,nvl(sum(t.succ_received_number),0) as
		PING_RECEIVE_COUNT,nvl(sum(t.received_avg_duration) /
		count(t.received_avg_duration),0) as
		PING_AVG_USED_TIME,nvl(sum(t.rxlevel) / count(t.rxlevel),0) as
		PING_AVG_LEVEL,nvl(t.SUBGROUP_NAME,'unknow') as
		GROUP_NAME,nvl(t.subgroup_id,'unknow') as SUBGROUP_ID FROM
		ANDROID_TEST_PING T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR#)
		and T.MNC2=#MNC2:INTEGER# and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# AND T.GROUP_NAME=#GROUP_NAME:VARCHAR#
		group by t.subgroup_id,t.SUBGROUP_NAME order by t.SUBGROUP_NAME
	</select>

	<select id="selectDATA_ALL_PING" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		nvl(sum(t.succ_received_number)/sum(t.sent_number)*100,0) as
		PING_SUCC_FRE,nvl(sum(t.sent_number),0) as
		PING_SEND_COUNT,nvl(sum(t.succ_received_number),0) as
		PING_RECEIVE_COUNT,nvl(sum(t.received_avg_duration) /
		count(t.received_avg_duration),0) as
		PING_AVG_USED_TIME,nvl(sum(t.rxlevel) / count(t.rxlevel),0) as
		PING_AVG_LEVEL,nvl(t.SUBGROUP_NAME,'unknow') as
		GROUP_NAME,nvl(t.subgroup_id,'unknow') as SUBGROUP_ID FROM
		ANDROID_TEST_PING T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR# or
		T.NET_TYPE=#NET_TYPE3:VARCHAR# or
		T.NET_TYPE=#NET_TYPE4:VARCHAR# or
		T.NET_TYPE=#NET_TYPE5:VARCHAR# or
		T.NET_TYPE=#NET_TYPE6:VARCHAR#) and
		T.MNC2=#MNC2:INTEGER# and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# AND T.GROUP_NAME=#GROUP_NAME:VARCHAR#
		group by t.subgroup_id,t.SUBGROUP_NAME order by t.SUBGROUP_NAME
	</select>

	<select id="selectPROVINCE_DATA_VIDEO" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		nvl(decode(sum(PROGRAM_TIME),0,0,100*sum(VIDEO_PLAY_TIME)/sum(PROGRAM_TIME)),0)
		as VIDEO_FLUENT,
		nvl(decode(count(VIDEO_OPEN_RESULT),0,0,100*sum(VIDEO_OPEN_RESULT)/count(VIDEO_OPEN_RESULT)),0)
		as VIDEO_OPEN_FRE ,
		nvl(decode(sum(DOWNLOAD_TIME),0,0,0.008*sum(VIDEO_DATA_SIZE)/sum(DOWNLOAD_TIME)),0)
		as VIDEO_SPEED,nvl(sum(VIDEO_CUSHION_TIME),0) as
		VIDEO_FIRST_BUFF_TIME,nvl(t.GROUP_NAME,'unknow') as
		GROUP_NAME,nvl(t.group_id,'unknow') as GROUP_ID FROM
		ANDROID_TEST_VIDEO T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR#)
		and T.MNC2=#MNC2:INTEGER# and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by t.group_id,t.GROUP_NAME
		order by t.GROUP_NAME
	</select>

	<select id="selectPROVINCE_DATA_ALL_VIDEO" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		nvl(decode(sum(PROGRAM_TIME),0,0,100*sum(VIDEO_PLAY_TIME)/sum(PROGRAM_TIME)),0)
		as VIDEO_FLUENT,
		nvl(decode(count(VIDEO_OPEN_RESULT),0,0,100*sum(VIDEO_OPEN_RESULT)/count(VIDEO_OPEN_RESULT)),0)
		as VIDEO_OPEN_FRE ,
		nvl(decode(sum(DOWNLOAD_TIME),0,0,0.008*sum(VIDEO_DATA_SIZE)/sum(DOWNLOAD_TIME)),0)
		as VIDEO_SPEED,nvl(sum(VIDEO_CUSHION_TIME),0) as
		VIDEO_FIRST_BUFF_TIME,nvl(t.GROUP_NAME,'unknow') as
		GROUP_NAME,nvl(t.group_id,'unknow') as GROUP_ID FROM
		ANDROID_TEST_VIDEO T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR# or
		T.NET_TYPE=#NET_TYPE3:VARCHAR# or
		T.NET_TYPE=#NET_TYPE4:VARCHAR# or
		T.NET_TYPE=#NET_TYPE5:VARCHAR# or
		T.NET_TYPE=#NET_TYPE6:VARCHAR#) and
		T.MNC2=#MNC2:INTEGER# and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by t.group_id,t.GROUP_NAME
		order by t.GROUP_NAME
	</select>

	<select id="selectCITY_DATA_VIDEO" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		nvl(decode(sum(PROGRAM_TIME),0,0,100*sum(VIDEO_PLAY_TIME)/sum(PROGRAM_TIME)),0)
		as VIDEO_FLUENT,
		nvl(decode(count(VIDEO_OPEN_RESULT),0,0,100*sum(VIDEO_OPEN_RESULT)/count(VIDEO_OPEN_RESULT)),0)
		as VIDEO_OPEN_FRE ,
		nvl(decode(sum(DOWNLOAD_TIME),0,0,0.008*sum(VIDEO_DATA_SIZE)/sum(DOWNLOAD_TIME)),0)
		as VIDEO_SPEED,nvl(sum(VIDEO_CUSHION_TIME),0) as
		VIDEO_FIRST_BUFF_TIME,nvl(t.SUBGROUP_NAME,'unknow') as
		GROUP_NAME,nvl(t.subgroup_id,'unknow') as SUBGROUP_ID FROM
		ANDROID_TEST_VIDEO T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR#)
		and T.MNC2=#MNC2:INTEGER# and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by
		t.subgroup_id,t.SUBGROUP_NAME order by t.SUBGROUP_NAME
	</select>

	<select id="selectCITY_DATA_ALL_VIDEO" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		nvl(decode(sum(PROGRAM_TIME),0,0,100*sum(VIDEO_PLAY_TIME)/sum(PROGRAM_TIME)),0)
		as VIDEO_FLUENT,
		nvl(decode(count(VIDEO_OPEN_RESULT),0,0,100*sum(VIDEO_OPEN_RESULT)/count(VIDEO_OPEN_RESULT)),0)
		as VIDEO_OPEN_FRE ,
		nvl(decode(sum(DOWNLOAD_TIME),0,0,0.008*sum(VIDEO_DATA_SIZE)/sum(DOWNLOAD_TIME)),0)
		as VIDEO_SPEED,nvl(sum(VIDEO_CUSHION_TIME),0) as
		VIDEO_FIRST_BUFF_TIME,nvl(t.SUBGROUP_NAME,'unknow') as
		GROUP_NAME,nvl(t.subgroup_id,'unknow') as SUBGROUP_ID FROM
		ANDROID_TEST_VIDEO T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR# or
		T.NET_TYPE=#NET_TYPE3:VARCHAR# or
		T.NET_TYPE=#NET_TYPE4:VARCHAR# or
		T.NET_TYPE=#NET_TYPE5:VARCHAR# or
		T.NET_TYPE=#NET_TYPE6:VARCHAR#) and
		T.MNC2=#MNC2:INTEGER# and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by
		t.subgroup_id,t.SUBGROUP_NAME order by t.SUBGROUP_NAME
	</select>

	<select id="selectDATA_VIDEO" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		nvl(decode(sum(PROGRAM_TIME),0,0,100*sum(VIDEO_PLAY_TIME)/sum(PROGRAM_TIME)),0)
		as VIDEO_FLUENT,
		nvl(decode(count(VIDEO_OPEN_RESULT),0,0,100*sum(VIDEO_OPEN_RESULT)/count(VIDEO_OPEN_RESULT)),0)
		as VIDEO_OPEN_FRE ,
		nvl(decode(sum(DOWNLOAD_TIME),0,0,0.008*sum(VIDEO_DATA_SIZE)/sum(DOWNLOAD_TIME)),0)
		as VIDEO_SPEED,nvl(count(VIDEO_OPEN_RESULT),0) as
		VIDEO_TEST_COUNT,nvl(sum(VIDEO_OPEN_RESULT),0) as
		VIDEO_OPEN_SUCC_COUNT,nvl(avg(PROGRAM_TIME),0) as
		USER_DEFINE_TIME,nvl(sum(VIDEO_CUSHION_TIME),0) as
		VIDEO_FIRST_BUFF_TIME,sum(nvl(PROGRAM_TIME,0) -
		nvl(VIDEO_PLAY_TIME,0)) as USER_WAIT_TIME,nvl(sum(VIDEO_PLAY_TIME),0)
		as VIDEO_PLAY_TIME,nvl(sum(VIDEO_PLAY_TIME),0) as
		VIDEO_OPEN_TIME,nvl(sum(DOWNLOAD_TIME),0)as
		VIDEO_DOWN_TIME,nvl(round(sum(VIDEO_DATA_SIZE)/1024),0) as
		VIDEO_DATA_SIZE,nvl(t.SUBGROUP_NAME,'unknow') as
		GROUP_NAME,nvl(t.subgroup_id,'unknow') as SUBGROUP_ID FROM
		ANDROID_TEST_VIDEO T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR#)
		and T.MNC2=#MNC2:INTEGER# and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# AND T.GROUP_NAME=#GROUP_NAME:VARCHAR#
		group by t.subgroup_id,t.SUBGROUP_NAME order by t.SUBGROUP_NAME
	</select>

	<select id="selectDATA_ALL_VIDEO" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT
		nvl(decode(sum(PROGRAM_TIME),0,0,100*sum(VIDEO_PLAY_TIME)/sum(PROGRAM_TIME)),0)
		as VIDEO_FLUENT,
		nvl(decode(count(VIDEO_OPEN_RESULT),0,0,100*sum(VIDEO_OPEN_RESULT)/count(VIDEO_OPEN_RESULT)),0)
		as VIDEO_OPEN_FRE ,
		nvl(decode(sum(DOWNLOAD_TIME),0,0,0.008*sum(VIDEO_DATA_SIZE)/sum(DOWNLOAD_TIME)),0)
		as VIDEO_SPEED,nvl(count(VIDEO_OPEN_RESULT),0) as
		VIDEO_TEST_COUNT,nvl(sum(VIDEO_OPEN_RESULT),0) as
		VIDEO_OPEN_SUCC_COUNT,nvl(avg(PROGRAM_TIME),0) as
		USER_DEFINE_TIME,nvl(sum(VIDEO_CUSHION_TIME),0) as
		VIDEO_FIRST_BUFF_TIME,sum(nvl(PROGRAM_TIME,0) -
		nvl(VIDEO_PLAY_TIME,0)) as USER_WAIT_TIME,nvl(sum(VIDEO_PLAY_TIME),0)
		as VIDEO_PLAY_TIME,nvl(sum(VIDEO_PLAY_TIME),0) as
		VIDEO_OPEN_TIME,nvl(sum(DOWNLOAD_TIME),0)as
		VIDEO_DOWN_TIME,nvl(round(sum(VIDEO_DATA_SIZE)/1024),0) as
		VIDEO_DATA_SIZE,nvl(t.SUBGROUP_NAME,'unknow') as
		GROUP_NAME,nvl(t.subgroup_id,'unknow') as SUBGROUP_ID FROM
		ANDROID_TEST_VIDEO T
		WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or
		T.NET_TYPE=#NET_TYPE2:VARCHAR# or
		T.NET_TYPE=#NET_TYPE3:VARCHAR# or
		T.NET_TYPE=#NET_TYPE4:VARCHAR# or
		T.NET_TYPE=#NET_TYPE5:VARCHAR# or
		T.NET_TYPE=#NET_TYPE6:VARCHAR#) and
		T.MNC2=#MNC2:INTEGER# and
		T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND
		T.LOGTIME&lt;#ENDTIME:TIMESTAMP# AND T.GROUP_NAME=#GROUP_NAME:VARCHAR#
		group by t.subgroup_id,t.SUBGROUP_NAME order by t.SUBGROUP_NAME
	</select>


	<!-- <select id="selectPROVINCE_DATA_CONNECTNET" parameterClass="java.util.HashMap" 
		resultClass="java.util.HashMap" remapResults="true"> SELECT nvl(decode(count(CONNECT_RESULT),0,0,sum(CONNECT_RESULT)/count(CONNECT_RESULT)),0) 
		as connect_fre,nvl(avg(CONNECT_SUCC_TIME),0) as connect_avg_time,nvl(decode(count(CONNECT_NET_RESULT),0,0,sum(CONNECT_NET_RESULT)/count(CONNECT_NET_RESULT)),0) 
		as connect_net_fre,nvl(avg(CONNECT_NET_SUCC_TIME),0) as connect_net_time,nvl(t.GROUP_NAME,'unknow') 
		as GROUP_NAME,nvl(t.group_id,'unknow') as GROUP_ID FROM ANDROID_TEST_NETWORK 
		T WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or T.NET_TYPE=#NET_TYPE2:VARCHAR#) 
		and T.MNC2=#MNC2:INTEGER# and T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND T.LOGTIME&lt;#ENDTIME:TIMESTAMP# 
		group by t.group_id,t.GROUP_NAME order by t.GROUP_NAME </select> <select 
		id="selectPROVINCE_DATA_ALL_CONNECTNET" parameterClass="java.util.HashMap" 
		resultClass="java.util.HashMap" remapResults="true"> SELECT nvl(decode(count(CONNECT_RESULT),0,0,sum(CONNECT_RESULT)/count(CONNECT_RESULT)),0) 
		as connect_fre,nvl(avg(CONNECT_SUCC_TIME),0) as connect_avg_time,nvl(decode(count(CONNECT_NET_RESULT),0,0,sum(CONNECT_NET_RESULT)/count(CONNECT_NET_RESULT)),0) 
		as connect_net_fre,nvl(avg(CONNECT_NET_SUCC_TIME),0) as connect_net_time,nvl(t.GROUP_NAME,'unknow') 
		as GROUP_NAME,nvl(t.group_id,'unknow') as GROUP_ID FROM ANDROID_TEST_NETWORK 
		T WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or T.NET_TYPE=#NET_TYPE2:VARCHAR# 
		or T.NET_TYPE=#NET_TYPE3:VARCHAR# or T.NET_TYPE=#NET_TYPE4:VARCHAR# or T.NET_TYPE=#NET_TYPE5:VARCHAR# 
		or T.NET_TYPE=#NET_TYPE6:VARCHAR#) and T.MNC2=#MNC2:INTEGER# and T.LOGTIME&gt;#STARTTIME:TIMESTAMP# 
		AND T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by t.group_id,t.GROUP_NAME order 
		by t.GROUP_NAME </select> <select id="selectCITY_DATA_CONNECTNET" parameterClass="java.util.HashMap" 
		resultClass="java.util.HashMap" remapResults="true"> SELECT nvl(decode(count(CONNECT_RESULT),0,0,sum(CONNECT_RESULT)/count(CONNECT_RESULT)),0) 
		as connect_fre,nvl(avg(CONNECT_SUCC_TIME),0) as connect_avg_time,nvl(decode(count(CONNECT_NET_RESULT),0,0,sum(CONNECT_NET_RESULT)/count(CONNECT_NET_RESULT)),0) 
		as connect_net_fre,nvl(avg(CONNECT_NET_SUCC_TIME),0) as connect_net_time,nvl(t.SUBGROUP_NAME,'unknow') 
		as SUBGROUP_NAME,nvl(t.subgroup_id,'unknow') as SUBGROUP_ID FROM ANDROID_TEST_NETWORK 
		T WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or T.NET_TYPE=#NET_TYPE2:VARCHAR#) 
		and T.MNC2=#MNC2:INTEGER# and T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND T.LOGTIME&lt;#ENDTIME:TIMESTAMP# 
		group by t.subgroup_id,t.SUBGROUP_NAME order by t.SUBGROUP_NAME </select> 
		<select id="selectCITY_DATA_ALL_CONNECTNET" parameterClass="java.util.HashMap" 
		resultClass="java.util.HashMap" remapResults="true"> SELECT nvl(decode(count(CONNECT_RESULT),0,0,sum(CONNECT_RESULT)/count(CONNECT_RESULT)),0) 
		as connect_fre,nvl(avg(CONNECT_SUCC_TIME),0) as connect_avg_time,nvl(decode(count(CONNECT_NET_RESULT),0,0,sum(CONNECT_NET_RESULT)/count(CONNECT_NET_RESULT)),0) 
		as connect_net_fre,nvl(avg(CONNECT_NET_SUCC_TIME),0) as connect_net_time,nvl(t.SUBGROUP_NAME,'unknow') 
		as SUBGROUP_NAME,nvl(t.subgroup_id,'unknow') as SUBGROUP_ID FROM ANDROID_TEST_NETWORK 
		T WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or T.NET_TYPE=#NET_TYPE2:VARCHAR# 
		or T.NET_TYPE=#NET_TYPE3:VARCHAR# or T.NET_TYPE=#NET_TYPE4:VARCHAR# or T.NET_TYPE=#NET_TYPE5:VARCHAR# 
		or T.NET_TYPE=#NET_TYPE6:VARCHAR#) and T.MNC2=#MNC2:INTEGER# and T.LOGTIME&gt;#STARTTIME:TIMESTAMP# 
		AND T.LOGTIME&lt;#ENDTIME:TIMESTAMP# group by t.subgroup_id,t.SUBGROUP_NAME 
		order by t.SUBGROUP_NAME </select> <select id="selectDATA_CONNECTNET" parameterClass="java.util.HashMap" 
		resultClass="java.util.HashMap" remapResults="true"> SELECT ,nvl(t.SUBGROUP_NAME,'unknow') 
		as GROUP_NAME,nvl(t.subgroup_id,'unknow') as SUBGROUP_ID FROM ANDROID_TEST_NETWORK 
		T WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# or T.NET_TYPE=#NET_TYPE2:VARCHAR#) 
		and T.MNC2=#MNC2:INTEGER# and T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND T.LOGTIME&lt;#ENDTIME:TIMESTAMP# 
		AND T.GROUP_NAME=#GROUP_NAME:VARCHAR# group by t.subgroup_id,t.SUBGROUP_NAME 
		order by t.SUBGROUP_NAME </select> <select id="selectDATA_ALL_CONNECTNET" 
		parameterClass="java.util.HashMap" resultClass="java.util.HashMap" remapResults="true"> 
		SELECT ,nvl(t.SUBGROUP_NAME,'unknow') as GROUP_NAME,nvl(t.subgroup_id,'unknow') 
		as SUBGROUP_ID FROM ANDROID_TEST_NETWORK T WHERE (T.NET_TYPE=#NET_TYPE1:VARCHAR# 
		or T.NET_TYPE=#NET_TYPE2:VARCHAR# or T.NET_TYPE=#NET_TYPE3:VARCHAR# or T.NET_TYPE=#NET_TYPE4:VARCHAR# 
		or T.NET_TYPE=#NET_TYPE5:VARCHAR# or T.NET_TYPE=#NET_TYPE6:VARCHAR#) and 
		T.MNC2=#MNC2:INTEGER# and T.LOGTIME&gt;#STARTTIME:TIMESTAMP# AND T.LOGTIME&lt;#ENDTIME:TIMESTAMP# 
		AND T.GROUP_NAME=#GROUP_NAME:VARCHAR# group by t.subgroup_id,t.SUBGROUP_NAME 
		order by t.SUBGROUP_NAME </select> -->


	<select id="selectDATA_PROBLEM" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select * from (SELECT
		rownum rn,pre.* FROM (SELECT ID,nvl(PROBLEM_PHOTOS,' ')
		IMAGE_URL,AUDIO,nvl(PROBLEM_TIME,to_timestamp('01-01-01','yy-mm-dd'))
		PROBLEM_TIME,nvl(QUESTION_BUSINESS_TYPE,0)
		QUESTION_BUSINESS_TYPE,nvl(QUESTION_CLASSIFICATION,0)
		QUESTION_CLASSIFICATION,nvl(INSTRUCTION_MANUAL,0)
		INSTRUCTION_MANUAL,nvl(PROBLEM_DESCRIPTION,' ')
		PROBLEM_DESCRIPTION,nvl(PROBLEM_STATE,0)
		PROBLEM_STATE,nvl(PROCESSIONG_PROCEDURE,' ')
		PROCESSIONG_PROCEDURE,LOCATION,1 PROBLEM_FRE FROM
		ANDROID_TEST_PROBLEM_REPORT T where T.MNC2=#MNC2:INTEGER# ORDER BY
		T.ID DESC) PRE )
		where rn between #DATA_ID:INTEGER# and
		#DATA_NUMBER:INTEGER#
	</select>
	
	<select id="getproblemListForJX" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select * from (SELECT
		rownum rn,pre.* FROM ( SELECT T.ID,T.LOCATION,to_char(T.PROBLEM_REPORT_TIME,'yyyy-mm-dd hh24:mi:ss') as PROBLEM_REPORT_TIME,T.PROBLEM_STATE,T.QUESTION_CLASSIFICATION,
		T.NET_TYPE,T.MSISDN,T.LOG_NAME,T.PROBLEM_PHOTOS,T.PROBLEM_DESCRIPTION,T.AUDIO,T.SUBGROUP_ID,T.LON,T.LAT   
		FROM ANDROID_TEST_PROBLEM_REPORT T WHERE 
		T.PROBLEM_STATE in ($PROBLEM_STATE$) 
		AND T.PROBLEM_REPORT_TIME &gt; TO_DATE(#STARTTIME#, 'yyyy-mm-dd hh24:mi:ss') 
		AND T.PROBLEM_REPORT_TIME &lt; TO_DATE(#ENDTIME#, 'yyyy-mm-dd hh24:mi:ss') 
		AND T.LAT BETWEEN #STARTLAT:FLOAT# AND #ENDLAT:FLOAT# 
		AND T.LON BETWEEN #STARTLON:FLOAT# AND #ENDLON:FLOAT# 
		ORDER BY T.PROBLEM_REPORT_TIME DESC ) PRE )
		where rn between
		#DATA_ID:INTEGER# and #DATA_NUMBER:INTEGER#
	</select>
	
	<select id="getproblemListCityForJX" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select * from (SELECT
		rownum rn,pre.* FROM ( SELECT T.ID,T.LOCATION,to_char(T.PROBLEM_REPORT_TIME,'yyyy-mm-dd hh24:mi:ss') as PROBLEM_REPORT_TIME,T.PROBLEM_STATE,T.QUESTION_CLASSIFICATION,
		T.NET_TYPE,T.MSISDN,T.LOG_NAME,T.PROBLEM_PHOTOS,T.PROBLEM_DESCRIPTION,T.AUDIO,T.SUBGROUP_ID,T.LON,T.LAT 
		FROM ANDROID_TEST_PROBLEM_REPORT T WHERE 
		T.PROBLEM_STATE in ($PROBLEM_STATE$) 
		AND T.PROBLEM_REPORT_TIME &gt; TO_DATE(#STARTTIME#, 'yyyy-mm-dd hh24:mi:ss') 
		AND T.PROBLEM_REPORT_TIME &lt; TO_DATE(#ENDTIME#, 'yyyy-mm-dd hh24:mi:ss') 
		AND T.SUBGROUP_ID = #SUBGROUP_ID:VARCHAR# 
		<isNotEmpty property="MSISDN" prepend=" and ">
			T.MSISDN = #MSISDN:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty property="KEYWORD" prepend=" and ">
			(T.ID LIKE '%'||#KEYWORD:VARCHAR#||'%' OR T.MSISDN LIKE '%'||#KEYWORD:VARCHAR#||'%' OR T.PROBLEM_STATE IN (SELECT SUBSTR(T.DIC_KEY, 4, 5) DIC_KEY FROM BTU_DIC T WHERE T.DIC_TYPE_CODE=140 AND T.DIC_VALUE LIKE '%'||#KEYWORD:VARCHAR#||'%') OR T.QUESTION_CLASSIFICATION IN (SELECT SUBSTR(T.DIC_KEY, 4, 5) DIC_KEY FROM BTU_DIC T WHERE T.DIC_TYPE_CODE=138 AND T.DIC_VALUE LIKE '%'||#KEYWORD:VARCHAR#||'%'))
		</isNotEmpty>
		ORDER BY T.PROBLEM_REPORT_TIME DESC ) PRE )
		where rn between
		#DATA_ID:INTEGER# and #DATA_NUMBER:INTEGER#
	</select>
	
	<select id="getproblemStatisticsForJX" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT $STATISTICS_STATE$ AS STATISTICS_STATE,count(1) AS NUM  
		FROM ANDROID_TEST_PROBLEM_REPORT T WHERE 
		T.PROBLEM_REPORT_TIME &gt; TO_DATE(#STARTTIME#, 'yyyy-mm-dd hh24:mi:ss') 
		AND T.PROBLEM_REPORT_TIME &lt; TO_DATE(#ENDTIME#, 'yyyy-mm-dd hh24:mi:ss') 
		AND T.LAT BETWEEN #STARTLAT:FLOAT# AND #ENDLAT:FLOAT# 
		AND T.LON BETWEEN #STARTLON:FLOAT# AND #ENDLON:FLOAT#
		GROUP BY $STATISTICS_STATE$
	</select>
	
	<select id="getUpdataBaseDataForGroup" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT TAB.PROVINCE_NAME,TAB.PROVINCE_ID,WMSYS.WM_CONCAT(TAB.CITY_NAME || '-' || TAB.CITY_ID) AS CITYS
		FROM (SELECT T.GROUP_NAME PROVINCE_NAME,T.GROUP_GEO_ID PROVINCE_ID,Y.GROUP_NAME CITY_NAME,Y.GROUP_GEO_ID CITY_ID
		FROM GROUP_GEO T,GROUP_GEO Y WHERE Y.PARENT_ID = T.GROUP_GEO_ID AND Y.PARENT_ID = #PARENT_ID:INTEGER#) TAB
		GROUP BY TAB.PROVINCE_ID,TAB.PROVINCE_NAME 
	</select>
	
	<select id="getUpdataBaseData" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT T.DIC_KEY,T.DIC_VALUE
		FROM BTU_DIC T WHERE T.DIC_TYPE_CODE = #DIC_TYPE_CODE:INTEGER#
	</select>
	
	<insert id="insertANDROID_LOG_INFO" parameterClass="java.util.HashMap">
		INSERT INTO LOG_INFO
		(ID,LOG_NAME,USER_NAME,LOG_REPORT_TIME,SUBGROUP_ID,SUBGROUP_NAME,LOG_DETAIL,CREATE_TIME)
		VALUES
		(#ID:INTEGER#,#LOG_NAME:VARCHAR#,#USER_NAME:VARCHAR#,#LOG_REPORT_TIME:TIMESTAMP#,#SUBGROUP_ID:VARCHAR#,#SUBGROUP_NAME:VARCHAR#,#LOG_DETAIL:VARCHAR#,#CREATE_TIME:TIMESTAMP#)
	</insert>
	
	<delete id="deleteANDROID_LOG_INFO" parameterClass="java.util.HashMap">
		DELETE FROM	LOG_INFO T WHERE T.LOG_NAME = #LOG_NAME:VARCHAR#
	</delete>
	
	<select id="selectANDROID_LOG_INFO_MAXID" resultClass="Integer" remapResults="true">
		SELECT MAX(T.ID) FROM LOG_INFO T 
	</select>
	
	<select id="selectANDROID_LOG_INFO" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT ID,LOG_NAME,USER_NAME,TO_CHAR(LOG_REPORT_TIME, 'yyyy-mm-dd hh24:mi:ss') AS LOG_REPORT_TIME,SUBGROUP_ID,
		SUBGROUP_NAME,LOG_DETAIL,TO_CHAR(CREATE_TIME, 'yyyy-mm-dd hh24:mi:ss') AS CREATE_TIME
		FROM LOG_INFO T WHERE T.SUBGROUP_ID = #SUBGROUP_ID:VARCHAR#
		<isNotEmpty prepend=" and " property="USER_NAME">
			T.USER_NAME = #USER_NAME:VARCHAR#
		</isNotEmpty>
		AND T.CREATE_TIME &gt; TO_DATE(#STARTTIME#, 'yyyy-mm-dd hh24:mi:ss') 
		AND T.CREATE_TIME &lt; TO_DATE(#ENDTIME#, 'yyyy-mm-dd hh24:mi:ss') 
		ORDER BY T.LOG_REPORT_TIME DESC
	</select>
	
	<select id="selectANDROID_LOG_INFO_NAME" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT ID,LOG_NAME FROM LOG_INFO T WHERE T.LOG_NAME = #LOG_NAME:VARCHAR#
	</select>

	<select id="selectDATA_HTTP_RANK" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select * from ANDROID_RANK_HTTP k
		where
		k.NET_TYPE=#NET_TYPE:INTEGER#
		and k.CREATE_DATE=#CREATE_DATE:VARCHAR#
		<isNotEmpty prepend=" and " property="SUBGROUP_NAME">
			k.SUBGROUP_NAME=#SUBGROUP_NAME:VARCHAR#
			<!-- <isNotEmpty prepend=" and " property="groupNameList"> k.GROUP_NAME 
				in (select distinct p.group_name from GROUP_GEO p,GROUP_GEO c where c.parent_id 
				= p.group_geo_id and c.group_geo_id in <iterate property="groupNameList" 
				open="(" close=")" conjunction=","> #groupNameList[]# </iterate> ) </isNotEmpty> -->
		</isNotEmpty>
		<isEmpty prepend=" and " property="SUBGROUP_NAME">
			k.SUBGROUP_NAME != 'ȫ��'
			<!-- <isNotEmpty prepend=" and " property="subGroupNameList"> k.SUBGROUP_NAME 
				in (select g.group_name from group_geo g where g.group_geo_id in <iterate 
				property="subGroupNameList" open="(" close=")" conjunction=","> #subGroupNameList[]# 
				</iterate> ) </isNotEmpty> -->
		</isEmpty>
	</select>

	<select id="selectDATA_FTP_RANK" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select * from ANDROID_RANK_FTP j
		where
		j.NET_TYPE=#NET_TYPE:INTEGER#
		and
		j.CREATE_DATE=#CREATE_DATE:VARCHAR#
		<isNotEmpty prepend=" and " property="SUBGROUP_NAME">
			j.SUBGROUP_NAME=#SUBGROUP_NAME:VARCHAR#
			<!-- <isNotEmpty prepend=" and " property="groupNameList"> j.GROUP_NAME 
				in (select distinct p.group_name from GROUP_GEO p,GROUP_GEO c where c.parent_id 
				= p.group_geo_id and c.group_geo_id in <iterate property="groupNameList" 
				open="(" close=")" conjunction=","> #groupNameList[]# </iterate> ) </isNotEmpty> -->
		</isNotEmpty>
		<isEmpty prepend=" and " property="SUBGROUP_NAME">
			j.SUBGROUP_NAME !='ȫ��'
			<!-- <isNotEmpty prepend=" and " property="subGroupNameList"> j.SUBGROUP_NAME 
				in (select g.group_name from group_geo g where g.group_geo_id in <iterate 
				property="subGroupNameList" open="(" close=")" conjunction=","> #subGroupNameList[]# 
				</iterate> ) </isNotEmpty> -->
		</isEmpty>
	</select>
	<select id="selectDATA_PING_RANK" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select * from ANDROID_RANK_PING m
		where
		m.NET_TYPE=#NET_TYPE:INTEGER#
		and m.CREATE_DATE=#CREATE_DATE:VARCHAR#
		<isNotEmpty prepend=" and " property="SUBGROUP_NAME">
			m.SUBGROUP_NAME=#SUBGROUP_NAME:VARCHAR#
			<!-- <isNotEmpty prepend=" and " property="groupNameList"> m.GROUP_NAME 
				in (select distinct p.group_name from GROUP_GEO p,GROUP_GEO c where c.parent_id 
				= p.group_geo_id and c.group_geo_id in <iterate property="groupNameList" 
				open="(" close=")" conjunction=","> #groupNameList[]# </iterate> ) </isNotEmpty> -->
		</isNotEmpty>
		<isEmpty prepend=" and " property="SUBGROUP_NAME">
			m.SUBGROUP_NAME != 'ȫ��'
			<!-- <isNotEmpty prepend=" and " property="subGroupNameList"> m.SUBGROUP_NAME 
				in (select g.group_name from group_geo g where g.group_geo_id in <iterate 
				property="subGroupNameList" open="(" close=")" conjunction=","> #subGroupNameList[]# 
				</iterate> ) </isNotEmpty> -->

		</isEmpty>
	</select>
	<select id="selectDATA_VIDEO_RANK" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select * from ANDROID_RANK_VIDEO n
		where
		n.NET_TYPE=#NET_TYPE:INTEGER#
		and n.CREATE_DATE=#CREATE_DATE:VARCHAR#
		<isNotEmpty prepend=" and " property="SUBGROUP_NAME">
			n.SUBGROUP_NAME=#SUBGROUP_NAME:VARCHAR#
			<!-- <isNotEmpty prepend=" and " property="groupNameList"> n.GROUP_NAME 
				in (select distinct p.group_name from GROUP_GEO p,GROUP_GEO c where c.parent_id 
				= p.group_geo_id and c.group_geo_id in <iterate property="groupNameList" 
				open="(" close=")" conjunction=","> #groupNameList[]# </iterate> ) </isNotEmpty> -->
		</isNotEmpty>
		<isEmpty prepend=" and " property="SUBGROUP_NAME">
			n.SUBGROUP_NAME != 'ȫ��'
			<!-- <isNotEmpty prepend=" and " property="subGroupNameList"> n.SUBGROUP_NAME 
				in (select g.group_name from group_geo g where g.group_geo_id in <iterate 
				property="subGroupNameList" open="(" close=")" conjunction=","> #subGroupNameList[]# 
				</iterate> ) </isNotEmpty> -->
		</isEmpty>
	</select>
	<select id="selectDATA_PROBLEM2" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select * from (SELECT
		rownum rn,ID,
		IMAGE_URL,
		AUDIO,
		PROBLEM_TIME,
		QUESTION_BUSINESS_TYPE,
		QUESTION_CLASSIFICATION,
		INSTRUCTION_MANUAL,
		PROBLEM_DESCRIPTION,
		PROCESSIONG_PROCEDURE,
		LOCATION,
		PROBLEM_FRE,
		PROBLEM_STATE
		FROM (SELECT
		ID,
		AUDIO,
		nvl(PROBLEM_PHOTOS, ' ') IMAGE_URL,
		nvl(PROBLEM_TIME,
		to_timestamp('01-01-01', 'yy-mm-dd')) PROBLEM_TIME,
		nvl(QUESTION_BUSINESS_TYPE, 0) QUESTION_BUSINESS_TYPE,
		nvl(QUESTION_CLASSIFICATION, 0) QUESTION_CLASSIFICATION,
		nvl(INSTRUCTION_MANUAL, 0) INSTRUCTION_MANUAL,
		nvl(PROBLEM_DESCRIPTION, ' ') PROBLEM_DESCRIPTION,
		nvl(PROBLEM_STATE,
		0) PROBLEM_STATE,
		nvl(PROCESSIONG_PROCEDURE, ' ')
		PROCESSIONG_PROCEDURE,
		LOCATION,
		1 PROBLEM_FRE
		FROM
		ANDROID_TEST_PROBLEM_REPORT T
		WHERE ID &lt;= #DATA_ID:INTEGER#
		and
		T.MNC2=#MNC2:INTEGER#
		order by t.id desc) PRE)
		where rn &lt;=
		#DATA_NUMBER:INTEGER#
	</select>

	<select id="selectDATA_PROBLEM3" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select * from (SELECT
		rownum rn,pre.* FROM (SELECT ID,AUDIO,nvl(PROBLEM_PHOTOS,' ')
		IMAGE_URL,nvl(PROBLEM_TIME,to_timestamp('01-01-01','yy-mm-dd'))
		PROBLEM_TIME,nvl(QUESTION_BUSINESS_TYPE,0)
		QUESTION_BUSINESS_TYPE,nvl(QUESTION_CLASSIFICATION,0)
		QUESTION_CLASSIFICATION,nvl(INSTRUCTION_MANUAL,0)
		INSTRUCTION_MANUAL,nvl(PROBLEM_DESCRIPTION,' ')
		PROBLEM_DESCRIPTION,nvl(PROBLEM_STATE,0)
		PROBLEM_STATE,nvl(PROCESSIONG_PROCEDURE,' ')
		PROCESSIONG_PROCEDURE,LOCATION,1 PROBLEM_FRE FROM
		ANDROID_TEST_PROBLEM_REPORT T where t.imei=#IMEI:VARCHAR# and
		T.MNC2=#MNC2:INTEGER# order by t.id desc) PRE )
		where rn between
		#DATA_ID:INTEGER# and #DATA_NUMBER:INTEGER#
	</select>
	<select id="selectDATA_PROBLEM4" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select * from (SELECT
		rownum rn,ID,
		AUDIO,
		IMAGE_URL,
		PROBLEM_TIME,
		QUESTION_BUSINESS_TYPE,
		QUESTION_CLASSIFICATION,
		INSTRUCTION_MANUAL,
		PROBLEM_DESCRIPTION,
		PROCESSIONG_PROCEDURE,
		LOCATION,
		PROBLEM_FRE,
		PROBLEM_STATE
		FROM (SELECT
		ID,
		AUDIO,
		nvl(PROBLEM_PHOTOS, ' ') IMAGE_URL,
		nvl(PROBLEM_TIME,
		to_timestamp('01-01-01', 'yy-mm-dd')) PROBLEM_TIME,
		nvl(QUESTION_BUSINESS_TYPE, 0) QUESTION_BUSINESS_TYPE,
		nvl(QUESTION_CLASSIFICATION, 0) QUESTION_CLASSIFICATION,
		nvl(INSTRUCTION_MANUAL, 0) INSTRUCTION_MANUAL,
		nvl(PROBLEM_DESCRIPTION, ' ') PROBLEM_DESCRIPTION,
		nvl(PROBLEM_STATE,
		0) PROBLEM_STATE,
		nvl(PROCESSIONG_PROCEDURE, ' ')
		PROCESSIONG_PROCEDURE,
		LOCATION,
		1 PROBLEM_FRE
		FROM
		ANDROID_TEST_PROBLEM_REPORT T
		WHERE ID &lt;= #DATA_ID:INTEGER# AND
		t.imei=#IMEI:VARCHAR#
		and T.MNC2=#MNC2:INTEGER#
		order by t.id desc) PRE)
		where rn &lt;= #DATA_NUMBER:INTEGER#
	</select>

	<select id="selectGroupIDByCityName" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select
		max(t.group_geo_id) group_ids from group_geo t 
		where t.group_type is not null  and t.group_name like
		'%'||#group_name:VARCHAR#||'%'
	</select>

	<select id="selectTestUnit" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select *
		from test_unit tu
		where test_unit_version = (select max(t.test_unit_version)
		from
		test_unit t
		where (instr(t.group_id,#GROUP_ID:VARCHAR#,1,1)>0 or
		t.group_id='1' )
		and t.test_unit_level = #TEST_UNIT_LEVEL:INTEGER#
		and
		t.effective_time &lt; sysdate
		)

	</select>
	<select id="selectTestUnit1" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select *
		from test_unit tu
		where tu.test_unit_version = (select
		max(t.test_unit_version)
		from
		test_unit t
		where (t.group_name like
		'%'||#GROUP_NAME:VARCHAR#||'%' or
		t.group_id='1' )
		and t.test_unit_level =
		#TEST_UNIT_LEVEL:VARCHAR# and
		t.effective_time &lt;sysdate)

	</select>

	<select id="getDefaultTestUnit" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select tu.id,
		tu.test_unit_name,
		'1' || to_char(tu.update_time, 'yymmdd') || '-' ||
		tu.test_unit_version
		test_unit_version,
		tu.test_unit_level,
		tu.repeat
		from test_unit tu
		where tu.test_unit_version = #PLAN_CODE:VARCHAR#
	</select>

	<select id="getCommand" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select * from (
		select
		nvl(ftp.execute_number,0) execute_number,2 type,nvl(ftp.repeat,0)
		repeat,nvl(ftp.meantime,' ') meantime,nvl(ftp.server_name,' ')
		server_name,nvl(ftp.server_address,' ')
		server_address,nvl(ftp.ftp_port,0) ftp_port,nvl(ftp.ftp_user,' ')
		ftp_user,ftp_password,decode(ftp.transmission_mode,'','0','','1')
		transmission_mode,nvl(ftp.file_address,' ')
		file_address,decode(ftp.USER_MODE,'','0','','1')
		USER_MODE,''
		name,'' bit_rate,'' code_info,'' duration,'' call_numble
		from
		DETAILED_FTP ftp where
		ftp.unit_id = #ID:INTEGER#
		union all
		select
		nvl(http.execute_number,0)
		execute_number,1 type,nvl(http.repeat,0)
		repeat,nvl(http.meantime,' ')
		meantime,'','',0,'','','',nvl(http.destination_url,' ')
		destination_url,'','','','','' test_time,'' call_numble from
		detailed_http http where
		http.unit_id = #ID:INTEGER#
		union all
		select
		nvl(ping.execute_number,0)
		execute_number,3 type,nvl(ping.repeat,0)
		repeat,nvl(ping.meantime,' ')
		meantime,'','',0,'','','',nvl(ping.destination_url,' ')
		destination_url,'','','','','' test_time,'' call_numble from
		detailed_ping ping where
		ping.unit_id = #ID:INTEGER#
		union all
		select
		nvl(video.execute_number,0)
		execute_number,4 type,nvl(video.repeat,0)
		repeat,nvl(video.meantime,'
		')
		meantime,'','',0,'','','',nvl(video.destination_url,' ')
		destination_url,'',nvl(video.NAME,'') name,nvl(video.BIT_RATE,'')
		bit_rate,nvl(video.CODE_INFO,'') code_info,nvl(DURATION,0) DURATION,''
		call_numble
		from detailed_video video where video.unit_id =
		#ID:INTEGER#
		union all
		select nvl(audio.execute_number,0)
		execute_number,5 type,nvl(audio.repeat,0) repeat,nvl(audio.meantime,'
		') meantime,'','',0,'','','','','','','','',nvl(audio.DURATION,0)
		duration,nvl(audio.call_numble,'') call_numble
		from detailed_audio
		audio where audio.unit_id = #ID:INTEGER#
		)
		order by
		execute_number
	</select>

	<select id="getDetailedVideoSelect" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select
		nvl(video.content,' ') content,nvl(video.url,' ') url,''
		video_type,nvl(video.bit_rate,' ') bit_rate,nvl(video.code_info,' ')
		code_info from DETAILED_VIDEO_SELECT video
	</select>

	<!-- new end -->
	<select id="selectSERVER_LOCATION" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select *
		from
		SERVER_LOCATION t
		where t.PROVINCE_CODE=#PROVINCE_CODE:VARCHAR#
	</select>

	<select id="selectZEALOT_PUBLIC_TABLE" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select * from(select rownum r,upper(p.app_net_type) as network,
		p.app_rxlevel as rxlev,
		p.app_rsrp as rsrp,
		p.app_lac as lac,
		p.app_ci as
		ci,
		p.app_tac as tac,
		p.app_scell_pci as pci,
		p.app_eci as eci,
		p.app_logtime as logtime,
		p.app_location as location,
		p.app_lat as
		lantitude,
		p.app_lon as
		longitude,
		p.app_average,
		nvl(p.app_gps_coordinate,'bd09') as gps_type
		from
		zealot_public_table p
		where
		p.app_logtime&gt;#STARTTIME:TIMESTAMP#
		and
		p.app_logtime&lt;#ENDTIME:TIMESTAMP#
		and (
		(p.app_lon between
		#leftTopLon:VARCHAR# and #rightEndLon:VARCHAR#
		and
		p.app_lat between
		#rightEndLat:VARCHAR# and #leftTopLat:VARCHAR#
		and
		(p.app_gps_coordinate='bd09' or p.app_gps_coordinate is null))
		or
		(p.app_lon between
		#leftTopLon1:VARCHAR# and #rightEndLon1:VARCHAR#
		and
		p.app_lat between
		#rightEndLat1:VARCHAR# and #leftTopLat1:VARCHAR#
		and
		p.app_gps_coordinate='gcj02'))
		<isNotEmpty property="app_servicerequest">
			<isNotEqual property="app_servicerequest" compareValue="0"
				prepend=" and ">
				p.app_servicerequest=#app_servicerequest:VARCHAR#
			</isNotEqual>
		</isNotEmpty>
		and upper(p.app_net_type) in ($networks$) order by p.app_logtime desc)
		where r between
		#startPage:INTEGER# and #endPage:INTEGER#
	</select>

<select id="selectZEALOT_PUBLIC_TABLE_V2" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		 select  upper(p.app_net_type) as network,
		p.app_rxlevel as rxlev,
		p.app_rsrp as rsrp,
		p.app_lac as lac,
		p.app_ci as	ci,
		p.app_tac as tac,
		p.app_scell_pci as pci,
		p.app_eci as eci,
		p.app_logtime as logtime,
		p.app_location as location,
		p.app_lat as
		lantitude,
		p.app_lon as
		longitude,
		p.app_average,
		nvl(p.app_gps_coordinate,'bd09') as gps_type
		from
		zealot_public_table p
		where
		p.APP_SUBGROUP_ID =#subGroupID:VARCHAR# and
		p.app_logtime&gt;#STARTTIME:TIMESTAMP#
		and
		p.app_logtime&lt;#ENDTIME:TIMESTAMP#
		and p.app_gps_coordinate='gcj02'
		<isNotEmpty property="app_servicerequest">
			<isNotEqual property="app_servicerequest" compareValue="0"
				prepend=" and ">
				p.app_servicerequest=#app_servicerequest:VARCHAR#
			</isNotEqual>
		</isNotEmpty>
		and upper(p.app_net_type) in ($networks$)
		 
		 union all
		 select  upper(b.app_net_type) as network,
		b.app_rxlevel as rxlev,
		b.app_rsrp as rsrp,
		b.app_lac as lac,
		b.app_ci as	ci,
		b.app_tac as tac,
		b.app_scell_pci as pci,
		b.app_eci as eci,
		b.app_logtime as logtime,
		b.app_location as location,
		b.app_lat as lantitude,
		b.app_lon as longitude,
		b.app_average,
		nvl(b.app_gps_coordinate,'bd09') as gps_type
		from
		zealot_public_back b
		where
		b.APP_SUBGROUP_ID =#subGroupID:VARCHAR# and
		b.app_logtime&gt;#STARTTIME:TIMESTAMP#
		and
		b.app_logtime&lt;#ENDTIME:TIMESTAMP#
		and b.app_gps_coordinate='gcj02'
		<isNotEmpty property="app_servicerequest">
			<isNotEqual property="app_servicerequest" compareValue="0"
				prepend=" and ">
				b.app_servicerequest=#app_servicerequest:VARCHAR#
			</isNotEqual>
		</isNotEmpty>
		and upper(b.app_net_type) in ($networks$) order by logtime desc
	</select>
	

	<select id="selectZEALOT_PAGE_COUNT" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select ceil(count(*)/50) as total_page
		from
		zealot_public_table p
		where
		p.app_logtime&gt;#STARTTIME:TIMESTAMP#
		and
		p.app_logtime&lt;#ENDTIME:TIMESTAMP#
		and (
		(p.app_lon between
		#leftTopLon:VARCHAR# and #rightEndLon:VARCHAR#
		and
		p.app_lat between
		#rightEndLat:VARCHAR# and #leftTopLat:VARCHAR#
		and
		(p.app_gps_coordinate='bd09' or p.app_gps_coordinate is null))
		or
		(p.app_lon between
		#leftTopLon1:VARCHAR# and #rightEndLon1:VARCHAR#
		and
		p.app_lat between
		#rightEndLat1:VARCHAR# and #leftTopLat1:VARCHAR#
		and
		p.app_gps_coordinate='gcj02'))
		<isNotEmpty property="app_servicerequest">
			<isNotEqual property="app_servicerequest" compareValue="0"
				prepend=" and ">
				p.app_servicerequest=#app_servicerequest:VARCHAR#
			</isNotEqual>
		</isNotEmpty>
		and upper(p.app_net_type) in ($networks$) order by p.app_logtime desc
	</select>

	<update id="updateDataFTP" parameterClass="java.util.HashMap">
		update
		android_test_ftp t set t.group_id = #GROUP_ID:VARCHAR#
		,t.group_name =
		#GROUP_NAME:VARCHAR#,
		t.subgroup_id =
		#SUBGROUP_ID:VARCHAR#
		,t.subgroup_name = #SUBGROUP_NAME:VARCHAR#
		where
		t.subgroup_name =
		#OTHERNAME:VARCHAR# <!-- and t.logtime &gt;#STARTTIME:TIMESTAMP# 
			and t.logtime &lt;#ENDTIME:TIMESTAMP# and t.group_id is null -->
	</update>
	<update id="updateDataHTTP" parameterClass="java.util.HashMap">
		update
		android_test_http t set t.group_id = #GROUP_ID:VARCHAR#
		,t.group_name
		= #GROUP_NAME:VARCHAR#,
		t.subgroup_id =
		#SUBGROUP_ID:VARCHAR#
		,t.subgroup_name = #SUBGROUP_NAME:VARCHAR#
		where
		t.subgroup_name =
		#OTHERNAME:VARCHAR# <!--and t.logtime &gt;#STARTTIME:TIMESTAMP# 
			and t.logtime &lt;#ENDTIME:TIMESTAMP# and t.group_id is null -->
	</update>
	<update id="updateDataPING" parameterClass="java.util.HashMap">
		update
		android_test_ping t set t.group_id = #GROUP_ID:VARCHAR#
		,t.group_name
		= #GROUP_NAME:VARCHAR#,
		t.subgroup_id =
		#SUBGROUP_ID:VARCHAR#
		,t.subgroup_name = #SUBGROUP_NAME:VARCHAR#
		where
		t.subgroup_name =
		#OTHERNAME:VARCHAR# <!-- and t.logtime &gt;#STARTTIME:TIMESTAMP# 
			and t.logtime &lt;#ENDTIME:TIMESTAMP# and t.group_id is null -->
	</update>
	<update id="updateDataVIDEO" parameterClass="java.util.HashMap">
		update
		android_test_video t set t.group_id = #GROUP_ID:VARCHAR#
		,t.group_name
		= #GROUP_NAME:VARCHAR#,
		t.subgroup_id =
		#SUBGROUP_ID:VARCHAR#
		,t.subgroup_name = #SUBGROUP_NAME:VARCHAR#
		where
		t.subgroup_name =
		#OTHERNAME:VARCHAR# <!-- and t.logtime &gt;#STARTTIME:TIMESTAMP# 
			and t.logtime &lt;#ENDTIME:TIMESTAMP# and t.group_id is null -->
	</update>
	<update id="updateDataPUBLIC" parameterClass="java.util.HashMap">
		update
		ZEALOT_PUBLIC_TABLE t set t.app_group_id = #GROUP_ID:VARCHAR#
		,t.app_group_name = #GROUP_NAME:VARCHAR#,
		t.app_subgroup_id =
		#SUBGROUP_ID:VARCHAR# ,t.app_subgroup_name = #SUBGROUP_NAME:VARCHAR#
		where
		t.app_subgroup_name = #OTHERNAME:VARCHAR# <!-- and t.logtime &gt;#STARTTIME:TIMESTAMP# 
			and t.logtime &lt;#ENDTIME:TIMESTAMP# and t.group_id is null -->
	</update>


	<select id="selectANDROID_ZEALOT_PUBLIC_TABLE" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select t.app_lat,t.app_lon,t.app_group_name
		from zealot_public_table t 
		where t.app_logtime &gt; to_date(#STARTTIME#, 'yyyy-mm-dd hh24:mi:ss')
		and t.app_logtime &lt; to_date(#ENDTIME#, 'yyyy-mm-dd hh24:mi:ss')
		order by t.app_lat,t.app_lon,t.app_group_name
	</select>
	<select id="selectANDROID_ZEALOT_PUBLIC_BACK" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select t.app_lat,t.app_lon,t.app_group_name
		from zealot_public_back t 
		where t.app_logtime &gt; to_date(#STARTTIME#, 'yyyy-mm-dd hh24:mi:ss')
		and t.app_logtime &lt; to_date(#ENDTIME#, 'yyyy-mm-dd hh24:mi:ss')
		order by t.app_lat,t.app_lon,t.app_group_name
	</select>
	<select id="selectANDROID_ZEALOT_PUBLIC_ALL" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select t.app_lat,t.app_lon,t.app_group_name
		from zealot_public_table t 
		where t.app_logtime &gt; to_date(#STARTTIME#, 'yyyy-mm-dd hh24:mi:ss')
		and t.app_logtime &lt; to_date(#ENDTIME#, 'yyyy-mm-dd hh24:mi:ss')
		order by t.app_lat,t.app_lon,t.app_group_name
		union all
		select t.app_lat,t.app_lon,t.app_group_name 
		from zealot_public_back t 
		where t.app_logtime &gt; to_date(#STARTTIME#, 'yyyy-mm-dd hh24:mi:ss')
		and t.app_logtime &lt; to_date(#ENDTIME#, 'yyyy-mm-dd hh24:mi:ss')
		order by t.app_lat,t.app_lon,t.app_group_name
	</select>
	
	<select id="selectANDROID_ZEALOT_PUBLIC_TABLE1" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select t.app_lat,t.app_lon,t.app_group_name
		from zealot_public_table t 
		where (t.app_group_id is null or t.app_group_name is null or t.app_subgroup_id is null or t.app_subgroup_name is null)
		and t.app_logtime &gt; to_date(#STARTTIME#, 'yyyy-mm-dd hh24:mi:ss')
		and t.app_logtime &lt; to_date(#ENDTIME#, 'yyyy-mm-dd hh24:mi:ss')
		order by t.app_lat,t.app_lon,t.app_group_name
	</select>
	<select id="selectANDROID_ZEALOT_PUBLIC_BACK1" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select t.app_lat,t.app_lon,t.app_group_name
		from zealot_public_back t 
		where (t.app_group_id is null or t.app_group_name is null or t.app_subgroup_id is null or t.app_subgroup_name is null)
		and t.app_logtime &gt; to_date(#STARTTIME#, 'yyyy-mm-dd hh24:mi:ss')
		and t.app_logtime &lt; to_date(#ENDTIME#, 'yyyy-mm-dd hh24:mi:ss')
		order by t.app_lat,t.app_lon,t.app_group_name
	</select>
	<select id="selectANDROID_ZEALOT_PUBLIC_ALL1" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select t.app_lat,t.app_lon,t.app_group_name
		from zealot_public_table t 
		where (t.app_group_id is null or t.app_group_name is null or t.app_subgroup_id is null or t.app_subgroup_name is null) 
		and t.app_logtime &gt; to_date(#STARTTIME#, 'yyyy-mm-dd hh24:mi:ss')
		and t.app_logtime &lt; to_date(#ENDTIME#, 'yyyy-mm-dd hh24:mi:ss')
		order by t.app_lat,t.app_lon,t.app_group_name
		union all
		select t.app_lat,t.app_lon,t.app_group_name 
		from zealot_public_back t 
		where (t.app_group_id is null or t.app_group_name is null or t.app_subgroup_id is null or t.app_subgroup_name is null) 
		and t.app_logtime &gt; to_date(#STARTTIME#, 'yyyy-mm-dd hh24:mi:ss')
		and t.app_logtime &lt; to_date(#ENDTIME#, 'yyyy-mm-dd hh24:mi:ss')
		order by t.app_lat,t.app_lon,t.app_group_name
	</select>
	
	<update id="updateANDROID_ZEALOT_PUBLIC_TABLE" parameterClass="java.util.HashMap">
		update
		ZEALOT_PUBLIC_TABLE t set t.app_group_id = #APP_GROUP_ID:VARCHAR#
		,t.app_group_name = #APP_GROUP_NAME:VARCHAR#,
		t.app_subgroup_id =
		#APP_SUBGROUP_ID:VARCHAR# ,t.app_subgroup_name = #APP_SUBGROUP_NAME:VARCHAR#
		where
		t.app_lat = #APP_LAT:FLOAT#
		and t.app_lon = #APP_LON:FLOAT#
		and t.app_logtime &gt; to_date(#STARTTIME#, 'yyyy-mm-dd hh24:mi:ss')
		and t.app_logtime &lt; to_date(#ENDTIME#, 'yyyy-mm-dd hh24:mi:ss')
	</update>
	<update id="updateANDROID_ZEALOT_PUBLIC_BACK" parameterClass="java.util.HashMap">
		update
		ZEALOT_PUBLIC_BACK t set t.app_group_id = #APP_GROUP_ID:VARCHAR#
		,t.app_group_name = #APP_GROUP_NAME:VARCHAR#,
		t.app_subgroup_id =
		#APP_SUBGROUP_ID:VARCHAR# ,t.app_subgroup_name = #APP_SUBGROUP_NAME:VARCHAR#
		where
		t.app_lat = #APP_LAT:FLOAT#
		and t.app_lon = #APP_LON:FLOAT#
		and t.app_logtime &gt; to_date(#STARTTIME#, 'yyyy-mm-dd hh24:mi:ss')
		and t.app_logtime &lt; to_date(#ENDTIME#, 'yyyy-mm-dd hh24:mi:ss')
	</update>
	<update id="updateANDROID_ZEALOT_PUBLIC_TABLE1" parameterClass="java.util.HashMap">
		update
		ZEALOT_PUBLIC_TABLE t set t.app_group_id = #APP_GROUP_ID:VARCHAR#
		,t.app_group_name = #APP_GROUP_NAME:VARCHAR#,
		t.app_subgroup_id =
		#APP_SUBGROUP_ID:VARCHAR# ,t.app_subgroup_name = #APP_SUBGROUP_NAME:VARCHAR#
		where
		t.app_group_name = #APP_GROUP_NAME:VARCHAR#
		and t.app_logtime &gt; to_date(#STARTTIME#, 'yyyy-mm-dd hh24:mi:ss')
		and t.app_logtime &lt; to_date(#ENDTIME#, 'yyyy-mm-dd hh24:mi:ss')
	</update>
	<update id="updateANDROID_ZEALOT_PUBLIC_BACK1" parameterClass="java.util.HashMap">
		update
		ZEALOT_PUBLIC_BACK t set t.app_group_id = #APP_GROUP_ID:VARCHAR#
		,t.app_group_name = #APP_GROUP_NAME:VARCHAR#,
		t.app_subgroup_id =
		#APP_SUBGROUP_ID:VARCHAR# ,t.app_subgroup_name = #APP_SUBGROUP_NAME:VARCHAR#
		where
		t.app_group_name = #APP_GROUP_NAME:VARCHAR#
		and t.app_logtime &gt; to_date(#STARTTIME#, 'yyyy-mm-dd hh24:mi:ss')
		and t.app_logtime &lt; to_date(#ENDTIME#, 'yyyy-mm-dd hh24:mi:ss')
	</update>
	
	<select id="getYjSubscribeList" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT N.GROUP_GEO_ID,N.GROUP_NAME,(CASE WHEN T.STATE IS NULL THEN 2 ELSE T.STATE END) STATE 
 		FROM (SELECT to_char(M.GROUP_GEO_ID) AS GROUP_GEO_ID,M.GROUP_NAME FROM GROUP_GEO M WHERE M.PARENT_ID=10535) N
 		LEFT JOIN BTU_YJ_SUBSCRIBE T ON T.YJ_ID = N.GROUP_GEO_ID AND T.PHONE_NUMBER=#PHONE_NUMBER:VARCHAR#
	</select>
	<select id="getYjSubscribeLists" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT T.YJ_ID,T.YJ_NAME,T.STATE FROM BTU_YJ_SUBSCRIBE T WHERE T.PHONE_NUMBER=#PHONE_NUMBER:VARCHAR# AND T.STATE=1
	</select>
	<select id="getYjSubscribeListss" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT T.YJ_ID,T.YJ_NAME,T.STATE FROM BTU_YJ_SUBSCRIBE T WHERE T.PHONE_NUMBER=#PHONE_NUMBER:VARCHAR# AND T.TYPE=#TYPE:INTEGER# AND T.STATE=1
	</select>
	<select id="getYjSendStateList" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT T.MESSAGE_NUM FROM BTU_YJ_SEND_STATE T WHERE T.PHONE_NUMBER=#PHONE_NUMBER:VARCHAR# AND T.YJ_ID=#YJ_ID:VARCHAR# AND T.INDEX_NAME=#INDEX_NAME:VARCHAR# AND T.SEND_DATE=#SEND_DATE:TIMESTAMP#
	</select>
	<select id="getYjStatistices" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT T.YJ_DESC,T.TYPE FROM BTU_YJ_STATISTICS T WHERE T.PHONE_NUM=#PHONE_NUMBER:VARCHAR# AND T.ID=#YJ_ID:VARCHAR# AND T.YJ_NAME=#INDEX_NAME:VARCHAR# 
		AND T.CREATE_TIME &gt; TO_DATE(#STARTTIME#, 'yyyy-mm-dd hh24:mi:ss')
		AND T.CREATE_TIME &lt; TO_DATE(#ENDTIME#, 'yyyy-mm-dd hh24:mi:ss')
		AND ROWNUM=1
		ORDER BY T.CREATE_TIME DESC
	</select>
	
	<select id="getYjGroupCateList" parameterClass="Integer"
		resultClass="java.util.HashMap" remapResults="true">
		SELECT T.GROUP_ID,T.GROUP_NAME FROM BTU_YJ_GROUP_RELATION T WHERE T.FLOCK_ID=#FLOCK_ID:INTEGER# 
	</select>
	<select id="selectYJ_CATEGORY_ID" resultClass="Integer" remapResults="true">
		SELECT MAX(T.ID) FROM BTU_YJ_GROUP T
	</select>
	<insert id="insertYJ_CATEGORY_INFO" parameterClass="java.util.HashMap">
		INSERT INTO 
		BTU_YJ_GROUP 
		(ID,NAME,PHONE_NUMBER,STATE,CREATE_DATE,UPDATE_DATE)
		VALUES 
		(#ID:INTEGER#,#NAME:VARCHAR#,#PHONE_NUMBER:VARCHAR#,#STATE:INTEGER#,#CREATE_DATE:TIMESTAMP#,#UPDATE_DATE:TIMESTAMP#)
	</insert>
	<update id="updateYJ_CATEGORY_INFO" parameterClass="java.util.HashMap">
		UPDATE
		BTU_YJ_GROUP T 
		SET NAME=#NAME:VARCHAR#,PHONE_NUMBER=#PHONE_NUMBER:VARCHAR#,STATE=#STATE:INTEGER#,UPDATE_DATE=#UPDATE_DATE:TIMESTAMP#
		WHERE 
		T.ID=#ID:INTEGER#
	</update>
	<update id="deteleYJ_CATEGORY_INFO" parameterClass="Integer">
		UPDATE
		BTU_YJ_GROUP T 
		SET T.STATE = 3
		WHERE T.ID=#ID:INTEGER#
	</update>
	<insert id="insertYJ_GROUP_CATEGORY_INFO" parameterClass="java.util.HashMap">
		INSERT INTO 
		BTU_YJ_GROUP_RELATION 
		(FLOCK_ID,GROUP_ID,GROUP_NAME)
		VALUES 
		(#FLOCK_ID:INTEGER#,#GROUP_ID:VARCHAR#,#GROUP_NAME:VARCHAR#)
	</insert>
	<update id="updateYJ_GROUP_CATEGORY_INFO" parameterClass="java.util.HashMap">
		UPDATE
		BTU_YJ_GROUP_RELATION T 
		SET T.GROUP_ID=#GROUP_ID:VARCHAR#,T.GROUP_NAME=#GROUP_NAME:VARCHAR#
		WHERE T.FLOCK_ID=#FLOCK_ID:INTEGER#
	</update>
	<delete id="deleteYJ_GROUP_CATEGORY_INFO" parameterClass="Integer">
		DELETE FROM
		BTU_YJ_GROUP_RELATION T 
		WHERE T.FLOCK_ID=#FLOCK_ID:INTEGER#
	</delete>
	<select id="selectYJ_SUBSCRIBE_ID" resultClass="Integer" remapResults="true">
		SELECT MAX(T.ID) FROM BTU_YJ_SUBSCRIBE T
	</select>
	<select id="getYjSubscribes" resultClass="java.util.HashMap" remapResults="true">
		SELECT T.ID,T.STATE FROM BTU_YJ_SUBSCRIBE T WHERE TYPE=#TYPE:INTEGER# AND PHONE_NUMBER=#PHONE_NUMBER:VARCHAR# AND YJ_ID=#YJ_ID:VARCHAR# AND YJ_NAME=#YJ_NAME:VARCHAR#
	</select>
	<insert id="insertYJ_SUBSCRIBE_INFO" parameterClass="java.util.HashMap">
		INSERT INTO 
		BTU_YJ_SUBSCRIBE 
		(ID,TYPE,PHONE_NUMBER,STATE,YJ_ID,YJ_NAME)
		VALUES 
		(#ID:INTEGER#,#TYPE:INTEGER#,#PHONE_NUMBER:VARCHAR#,#STATE:INTEGER#,#YJ_ID:VARCHAR#,#YJ_NAME:VARCHAR#)
	</insert>
	<update id="updateYJ_SUBSCRIBE_NAME" parameterClass="java.util.HashMap">
		UPDATE
		BTU_YJ_SUBSCRIBE T 
		SET T.YJ_NAME=#YJ_NAME:VARCHAR#
		WHERE T.YJ_ID=#ID:VARCHAR# AND T.TYPE=#TYPE:INTEGER#
	</update>
	<update id="updateYJ_SUBSCRIBE_GROUP" parameterClass="String">
		UPDATE
		BTU_YJ_SUBSCRIBE T 
		SET T.STATE=2
		WHERE T.PHONE_NUMBER=#PHONE_NUMBER:VARCHAR# AND T.TYPE=3
	</update>
	<update id="updateYJ_SUBSCRIBE_INFO" parameterClass="java.util.HashMap">
		UPDATE
		BTU_YJ_SUBSCRIBE T 
		SET T.STATE=#STATE:VARCHAR#
		WHERE T.ID=#ID:INTEGER# AND T.TYPE=#TYPE:INTEGER#
	</update>
	<insert id="insertYJ_SENDSTATE_INFO" parameterClass="java.util.HashMap">
		INSERT INTO 
		BTU_YJ_SEND_STATE 
		(TYPE,YJ_ID,INDEX_NAME,SEND_DATE,MESSAGE_NUM,PHONE_NUMBER)
		VALUES 
		(#TYPE:INTEGER#,#YJ_ID:VARCHAR#,#INDEX_NAME:VARCHAR#,#SEND_DATE:TIMESTAMP#,#MESSAGE_NUM:INTEGER#,#PHONE_NUMBER:VARCHAR#)
	</insert>
	<update id="updateYJ_SENDSTATE_INFO" parameterClass="java.util.HashMap">
		UPDATE
		BTU_YJ_SEND_STATE T 
		SET T.MESSAGE_NUM=#MESSAGE_NUM:INTEGER#
		WHERE T.YJ_ID=#YJ_ID:VARCHAR# AND T.INDEX_NAME=#INDEX_NAME:VARCHAR#
	</update>
	<select id="getsceneGPSCenterSelect" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		
	</select>
	<insert id="insertFeedbackOpinion" parameterClass="java.util.HashMap">
		<selectKey keyProperty="id" resultClass="int" >
			SELECT SEQ_OPINION.NEXTVAL AS ID FROM DUAL 
		</selectKey>
		INSERT INTO BTU_OPINION
			(ID,FEEDBACK_PERSON,PERSON_TEL,FEEDBACK_TIME,OPINION_CONTENT,REPLY_STATE)
		VALUES 
			(#id:INTEGER#,#userName:VARCHAR#,#phoneNum:VARCHAR#,SYSDATE,#content:VARCHAR#,0)
	</insert>
	<select id="selectfeedbackOpinion" parameterClass="java.util.HashMap"
		resultClass="java.util.HashMap" remapResults="true">
		select ID,FEEDBACK_PERSON,PERSON_TEL,FEEDBACK_TIME,OPINION_CONTENT,
			REPLY_STATE,REPLY_TIME,FEEDBACK_REPYL 
		from BTU_OPINION WHERE 1=1
			and PERSON_TEL = #phoneNum:VARCHAR#
		ORDER BY FEEDBACK_TIME DESC
	</select>
	
</sqlMap>
